{"version":3,"sources":["../../src/index.js"],"names":["app","listingObj","BathsTotal","BedsTotal","City","Id","Latitude","ListPrice","ListingId","Longitude","MlsId","MlsStatus","PhotoCaption","PhotoLarge","PhotoThumb","Photos","Caption","Uri300","UriLarge","UriThumb","PostalCode","PropertySubType","PropertyType","PublicRemarks","StreetName","StreetNumber","StreetSuffix","YearBuilt","completed","geo","set","process","env","PORT","use","static","__dirname","get","request","response","render","listen","console","log","Promise","require","size","promisify","ls","fbinit","initializeApp","serviceAccount","databaseURL","oauthData","client_id","client_secret","access_token","refresh_token","redirect_uri","expires_at","code","dB","database","ref","on","snapshot","val","JSON","stringify","errorObject","dbsnap","checkStatus","statusCode","refreshAuth","error","Error","statusText","saveOauthData","od","update","handleCallback","req","res","oauthHeaders","requestWithPageOps","ops","resolve","sizeAndSave","most","full","basic","keypath","idpath","citykey","cityid","zippath","streetpath","streetnumpath","sizeLarge","url","err","dimensions","length","safe","entry","size300","Photo300","all","then","donedoing","catch","e","promiseSaveListings","listings","updates","obj","allupdates","ShireKey","entries","forEach","lsts","D","dopromises","map","exists","child","listing","current","reqf","headers","uri","json","lkey","Object","assign","pb","CityKey","Zip","StreetAddressOnly","FullAddress","Price","Beds","Baths","Acres","LotSizeAcres","LivingArea","HighSchool","MiddleOrJuniorSchool","ElementarySchool","Neighborhood","SubdivisionName","BuildingArea","BuildingAreaTotal","Type","Videos","PrimaryPhotos","StreetAddress","citykeypath","cityidpath","streetnamepath","parr","ResourceUri","Name","Uri640","Uri800","Uri1024","Uri1280","Uri1600","Uri2048","Primary","sf","primaryphotos","keys","includes","photoentry","vids","VideosCount","uplist","UnparsedAddress","height","width","type","key","push","getPage","reject","setTimeout","getListings","filter","addr","makeUrl","args","zipcode","proptype","base","status","argfilter","andT","zipfilter","andZ","proptypefilter","andP","statusFilter","formatargs","_orderby","_filter","_limit","_select","arr","argEntry","join","promiseTo","doThis","oa","rauth","method","body","StatusCodeError","reason","RequestError","remove","send","params","combo","pageops","setargs","pagearr","opsurl","authops","pages","currentpage","page","pageReq","newops","promisedPages","results","f","cause","cities","hascode","agentId","query","options","once","grant_type","location"],"mappings":"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","file":"index.js","sourcesContent":["import express from \"express\";\nimport fb from 'firebase'\nimport rp from 'request-promise';\nlet app = express();\nimport safekey from 'firebase-safekey';\nlet listingObj = {BathsTotal:null,BedsTotal:null,City:null,Id:null,Latitude:null,ListPrice:null,ListingId:null,Longitude:null,MlsId:null,MlsStatus:null,PhotoCaption:'Loading',PhotoLarge:'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire320x220.png',PhotoThumb:'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire110x75.png',Photos:[{Caption:'Loading',Uri300:'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire110x75.png',UriLarge:'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire110x75.png',UriThumb:'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire110x75.png'}],PostalCode:null,PropertySubType:null,PropertyType:null,PublicRemarks:'Loading',StreetName:null,StreetNumber:null,StreetSuffix:null,YearBuilt:null,completed:null,geo:{}};\n\napp.set('port', (process.env.PORT || 5000));\n\napp.use(express.static(__dirname + '/public'));\n\n// views is directory for all template files\napp.set('views', __dirname + '/views');\napp.set('view engine', 'ejs');\n\napp.get('/', function(request, response) {\n    response.render('pages/index');\n});\n\napp.listen(app.get('port'), function() {\n    console.log('Node app is running on port', app.get('port'));\n});\n\n//import path from 'path';\n\n//let server = require('https').Server(app);\nconst Promise = require('bluebird'),\n    size = Promise.promisify(require('request-image-size'));\nimport errors from 'request-promise/errors';\nlet ls = [];\nlet fbinit = fb.initializeApp({\n    serviceAccount: {\n        \"type\": \"service_account\",\n        \"project_id\": \"sparkidxapi\",\n        \"private_key_id\": \"81085b6ba0707d1c02831f6b4b0b03a389f134dc\",\n        \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDgM1W+jsFYFGca\\n7TbB6mquembWVNI5BHXR0rO9ApMmLzfvW435Fh3ONjVFf1xkHOk8LpFpSKtzlKow\\ndxqZmeAJCRGRmqA0Tu3KGy2BvWmzkU+COezS8oLEcgSW7OJUsToxLwp3nvjKSBF8\\n50Vzsvu3WvlUzEmUkEB6InKBvgfhXAAi/YTRW6yhsIE+SZZ5lkhmEPaNALqWtJCx\\ni5Qw07Oz7OgeM0duJFMX3vL++y+SWkS5RM1u2KSrmQFPxD5tefutyIGM8JNeHABY\\n0FV5OtYulL8rspo6fqtI9kOuLXaNPYfWi7My4LsEbdX62iw2qOzdz62LIp5Op2gD\\nEFbJfmQxAgMBAAECggEBAJZQdKVtCp3mF/aKohLC+sF+GSKL/eHyZpfFv3HynvuT\\n3tmgtYAR3uvZlj/BEw2gAJOz2RQQf7rfKneR8wiWjQkhxmCrnctUO8MsE4ePmaWl\\nv/vcoDYSF7BjjUYvDdOgexZspoTq1XyxcuAeIodesbsNyGqdCJwNVt1L6R+pa5kg\\nF0eMozszPQXGeMfDFpjhpwXBcq67bFXdk4SqlvDeNSHxjWfl7/Hr0Kr8v0JnoJcw\\nuPxwLi6mvHVpYSVqpseQkr8aZ6xypT1+2ztkivMmqooRXFUaclxxIO2K1xCmncQg\\neGabGBOPzw2Zh/UnCnDfDYeaZ5k4pKNqfjBQM6o3il0CgYEA8iVXXfMjCVcdC/xq\\nrOAPir6jXy4u3f2ZSxMmDHgG6IFCxCPwhvjCE3Uv84Wnr6HZ114gSMGFIq9ZS22U\\nt7Uejq7UELVVn4pDAzPhdlJU9mBwTBcdoB1bJx1KtfCt8b9+M30H5JaMPJ+x22Z7\\nyWxhwMPu0N3TGuy2Z8Ue0zKvsLMCgYEA7Qcm8sm+uliCcS7ypNmbn2nRiEp9yFan\\nGZUb4flKO6xHJ/vBj60UEYKYkL63syXDdQ6yAV8jZlJHxVGIT7yJ0AhVkNo/oK4f\\nPNXiO4dw+N8ReJhcjwKmU0dOMK4rzH9QGma4WaIO1NXXhap2PbBlF/Yy4IlBnNHW\\n+7Faf1zUQYsCgYEAsHTBu/cIWzAePLPO0Pfem47c4ul2wdKiOPFVUtTMw/YeP2yp\\nRNJWK3PEY8PMNNLPOoCfKiXL7UC2456RN2ZHRFbmtt5N7RsGRnkyHdVVkM0qSGi3\\n8Aw0dsaDwR4IxBh10POWIuAKhcsiAu4l2tyeR6kAiTh9NCu3qNse4W0YVr0CgYBt\\njqS+C+oQj+CbGCwnbj20TWEAMg45j3PlKzqcFHHvaw3ouUEae9GO1mJWZRDbyVSy\\nwnwcjjD6loV9+tWapXa9pVyHe5l1V4YwxFuxUEUzg0e8ChCeOYdPbuIBNkAgYahQ\\ny7HiHDnmvoDD06qbkPDpRm71wfuF1Kgd5jgCLpIdSQKBgQCezHrV+ZHOvoxljR+x\\n3/kpwfHyWrqIbETvUz2TbjMc52igcdr09hbsp4mNTl0uy6kMk1MMHVCKNgWdS48x\\n6crGgSU/sIugJ9U3Ph7SWEf4wjPYgFRbB8dcbK/+M7SvCJ2/NR8UZKWXxa5TpO4+\\n2ElOQBtoUlLTnACetImf5YcchA==\\n-----END PRIVATE KEY-----\\n\",\n        \"client_email\": \"apiauth@sparkidxapi.iam.gserviceaccount.com\",\n        \"client_id\": \"113743275477969379982\",\n        \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n        \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n        \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n        \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/apiauth%40sparkidxapi.iam.gserviceaccount.com\"\n    },\n    databaseURL: \"https://sparkidxapi.firebaseio.com\"\n});\n\nlet oauthData = {\n    client_id: ' ',\n    client_secret: '',\n    access_token: '',\n    refresh_token: '',\n    redirect_uri: '',\n    expires_at: '',\n    code:''\n}\nlet dB = fbinit.database();\nfbinit.database().ref('/sparkauth/oauth').on(\"value\", function(snapshot) {\n    oauthData.client_id= snapshot.val().client_id\n    oauthData.client_secret= snapshot.val().client_secret\n    oauthData.access_token= snapshot.val().access_token\n    oauthData.refresh_token= snapshot.val().refresh_token\n    oauthData.redirect_uri= snapshot.val().redirect_uri\n    oauthData.expires_at= snapshot.val().expires_at?snapshot.val().expires_at:\"0\"\n    oauthData.code = snapshot.val().code\n    console.log(\"auth updated!\"+JSON.stringify(oauthData));\n\n}, function (errorObject) {\n    console.log(\"The read failed: \" + errorObject.code);\n});\nlet dbsnap;\nfbinit.database().ref('/listings').on(\"value\", function(snapshot) {\n    dbsnap = snapshot;}, function (errorObject) {\n    console.log(\"The read failed: \" + errorObject.code);\n});\n\nfunction checkStatus(response){\n    if (response.statusCode == 401) {\n        console.log('response = 401 ? '+response.statusCode)\n        // let oauthData = Object.assign({},oauthData)\n        // let fBdB = this.fBdB\n        return refreshAuth(oauthData);\n    }\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n        return response\n    } else {\n        let error = new Error(response.statusText)\n        error.response = response\n        console.log('got error while checking status '+error);\n    }\n}\nfunction saveOauthData(od) {\n    console.log(\"saving OauthData ->\"+od);\n    return dB.ref('/sparkauth/oauth').update(od)\n}\nfunction handleCallback(req, res) {\n\n}\n//https://searchidx.herokuapp.com/callback?openid.assoc_handle=%7BHMAC-SHA1%7D%7B58574516%7D%7B6I%2BC%2Bg%3D%3D%7D&openid.claimed_id=https%3A%2F%2Fsparkplatform.com%2Fopenid%2Fuserid%2Fmo.1524%3Fsession_id%3D6e338a49c2eef5f2d4e36270c0647de5&openid.identity=https%3A%2F%2Fsparkplatform.com%2Fopenid%2Fuserid%2Fmo.1524%3Fsession_id%3D6e338a49c2eef5f2d4e36270c0647de5&openid.mode=id_res&openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0&openid.ns.spark=http%3A%2F%2Fsparkplatform.com%2Fextensions%2Fspark%2F1.0&openid.ns.sreg=http%3A%2F%2Fopenid.net%2Fextensions%2Fsreg%2F1.1&openid.op_endpoint=https%3A%2F%2Fsparkplatform.com%2Fopenid%3Fsession_id%3D6e338a49c2eef5f2d4e36270c0647de5&openid.response_nonce=2016-12-19T02%3A25%3A26ZV3Hhkt&openid.return_to=https%3A%2F%2Fsearchidx.herokuapp.com%2Fcallback&openid.sig=e582hxh5GzHutv0z%2FMIayGji6cw%3D&openid.signed=assoc_handle%2Cclaimed_id%2Cidentity%2Cmode%2Cns%2Cns.spark%2Cns.sreg%2Cop_endpoint%2Cresponse_nonce%2Creturn_to%2Csigned%2Cspark.code%2Csreg.fullname%2Csreg.nickname&openid.spark.code=6tbc7lcwmiedsbwrlnpokkrdb&openid.sreg.fullname=Paul+Amato&openid.sreg.nickname=20140811174925623895000000\nfunction oauthHeaders(){\n    return {\n        'X-SparkApi-User-Agent': 'DevApp',\n        'Authorization': 'OAuth '+oauthData.access_token,\n        'Content-Type': 'application/json'\n    };\n}\nfunction requestWithPageOps(ops){\n    return Promise.resolve(rp(ops))\n}\nfunction sizeAndSave(most,full,basic,keypath,idpath,citykey,cityid,zippath,streetpath,streetnumpath){\n\n        let sizeLarge = size({url: basic.PhotoLarge},function (err, dimensions, length) {\n            full['PhotoLarge']['size'] = safekey.safe(dimensions);\n            let entry={};\n\n           // let most = Object.assign({},mostof)\n\n            // idpath.update(nbasic);\n            // citypath.update(nbasic);\n            // zippath.update(nbasic);\n            // streetpath.update(nbasic);\n            // streetnumpath.update(nbasic);\n            entry[idpath] = most;\n            entry[keypath] = full;\n            entry[citykey] = basic;\n            entry[cityid] = basic;\n            entry[zippath]=basic;\n            entry[streetpath]=basic;\n            entry[streetnumpath]=basic;\n            return dB.ref('/').update(entry)\n        });\n        let size300 = size({url: basic.Photo300},function (err, dimensions, length) {\n            full['Photo300']['size'] = safekey.safe(dimensions);\n            let entry={};\n            // let most = Object.assign({},full)\n\n            // idpath.update(nbasic);\n            // citypath.update(nbasic);\n            // zippath.update(nbasic);\n            // streetpath.update(nbasic);\n            // streetnumpath.update(nbasic);\n            entry[keypath] = full;\n            entry[idpath] = most;\n            entry[citykey] = basic;\n            entry[cityid] = basic;\n            entry[zippath]=basic;\n            entry[streetpath]=basic;\n            entry[streetnumpath]=basic;\n            return dB.ref('/').update(entry)\n        });\n\n       return Promise.all([sizeLarge,size300]).then(donedoing=>{\n            console.log('sized-'+JSON.stringify({donedoing}))\n        }).catch(e=>{\n           console.log(e)\n                })\n\n\n}\nfunction promiseSaveListings(listings){\n\n    let updates = {}\n    let obj = []\n        let allupdates=[];\n        let ShireKey;\n        let entries;\n        listings.forEach(lsts=>{\n        if (!lsts.D) {\n            console.log('no D found in results - inside :'+JSON.stringify(lsts))\n            return Promise.resolve(lsts)\n        }\n        else {\n            if (lsts['D']['Results']) {\n\n                let dopromises = lsts['D']['Results'].map(listing => {\n                    let exists = dbsnap.child('/id/' + listing.Id).exists();\n                    if (exists == true) {\n                        let current = dbsnap.child('/id/' + listing.Id).val();\n\n                        let reqf = rp({headers: oauthHeaders(), uri:'https://sparkapi.com/v1/listings/'+current.Id+'?_expand=Photos', json: true})\n                            .then(pb=>{\n                                let lkey = dbsnap.child('/id/' + listing.Id+'/ShireKey').val();\n                                let full = Object.assign(current,safekey.safe(pb['D']['Results'][0]['StandardFields']))\n                                let entry = {};\n                                let most = {\n                                    Id: full.Id,\n                                    City: full.City,\n                                    CityKey:'',\n                                    ShireKey:'',\n                                    Zip: full.PostalCode,\n                                    StreetAddressOnly: full.StreetAddressOnly,\n                                    FullAddress: full.FullAddress,\n                                    Price: full.ListPrice,\n                                    Beds: full.BedsTotal,\n                                    Baths: full.BathsTotal,\n                                    Acres: full.LotSizeAcres,\n                                    Photo300: full.Photo300,\n                                    PhotoLarge: full.PhotoLarge,\n                                    PhotoThumb: full.PhotoThumb,\n                                    PhotoCaption: full.PhotoCaption,\n                                    YearBuilt: full.YearBuilt,\n                                    LivingArea: full.LivingArea,\n                                    HighSchool: full.HighSchool,\n                                    MiddleOrJuniorSchool: full.MiddleOrJuniorSchool,\n                                    ElementarySchool: full.ElementarySchool,\n                                    Neighborhood: full.SubdivisionName,\n                                    BuildingArea: full.BuildingAreaTotal,\n                                    Type: full.PropertySubType,\n                                    ListPrice: full.ListPrice,\n                                    Latitude: full.Latitude,\n                                    Longitude: full.Longitude,\n                                    MlsStatus: full.MlsStatus,\n                                    PublicRemarks:full.PublicRemarks,\n                                    StreetNumber:full.StreetNumber,\n                                    StreetName:full.StreetName,\n                                    StreetSuffix:full.StreetSuffix\n                                };\n                                if(full.Videos.length>0){\n                                    most['Videos'] = full.Videos;\n                                }\n                                if(full.Photos.length>0){\n                                    most['PrimaryPhotos']=current.PrimaryPhotos;\n                                }\n                                let basic = {\n                                    Id: full.Id,\n                                    ShireKey:full.ShireKey,\n                                    City: full.City,\n                                    CityKey:full.CityKey,\n                                    Photo300:full.Photo300.url,\n                                    PhotoLarge:full.PhotoLarge.url,\n                                    PhotoThumb:full.PhotoThumb.url,\n                                    PublicRemarks:full.PublicRemarks,\n                                    StreetAddress: full.StreetAddress\n                                };\n                                basic = Object.assign({},safekey.safe(basic))\n                                ShireKey = current.ShireKey;\n                                let citykey = current.CityKey;\n                                let keypath = '/listings/keys/' + current.ShireKey;\n                                let idpath = '/listings/id/' + current.Id;\n                                let citykeypath = '/listings/location/city/' + current.City + '/keys/' + citykey;\n                                let cityidpath = '/listings/location/city/' + current.City + '/Id/' + current.Id;\n                                let zippath = '/listings/location/zip/' + current.Zip + '/' + current.Id;\n                                let streetnamepath = '/listings/location/street/name/'+ current['StreetName']+'/'+current.Id;\n                                let streetnumpath = '/listings/location/street/number/' + current['StreetNumber']+'/'+current.Id;\n\n                                entry[idpath] = most;\n                                entry[keypath] = full;\n                                entry[citykey] = basic;\n                                entry[cityid] = basic;\n                                entry[zippath]=basic;\n                                entry[streetpath]=basic;\n                                entry[streetnumpath]=basic;\n                                dB.ref('/').update(entry)\n                                return sizeAndSave(most,full,basic,keypath,idpath,citykeypath,cityidpath,zippath,streetnamepath,streetnumpath)\n\n                            })\n\n\n                        console.log('Price :' + current.ListPrice + ' City:' + current.City + 'CityKey : ' + current.CityKey + ' key :' + ShireKey)\n                    } else {\n                        let parr = [\n                            {\n                                ResourceUri: \"unset\",\n                                Id: \"0\",\n                                Name: \"PlaceHolder\",\n                                Caption: \"PlaceHolder\",\n                                UriThumb: \"https://searchidx.herokuapp.com/placeholders/shireThumb.png\",\n                                Uri300: \"https://searchidx.herokuapp.com/placeholders/shire300.png\",\n                                Uri640: \"https://searchidx.herokuapp.com/placeholders/shire640.png\",\n                                Uri800: \"https://searchidx.herokuapp.com/placeholders/shire800.png\",\n                                Uri1024: \"https://searchidx.herokuapp.com/placeholders/shire1024.png\",\n                                Uri1280: \"https://searchidx.herokuapp.com/placeholders/shire1280.png\",\n                                Uri1600: \"https://searchidx.herokuapp.com/placeholders/shire1600.png\",\n                                Uri2048: \"https://searchidx.herokuapp.com/placeholders/shire2048.png\",\n                                UriLarge: \"https://searchidx.herokuapp.com/placeholders/shire1024.png\",\n                                Primary: true\n                            }\n                        ];\n                        let sf = Object.assign({}, listing['StandardFields']);\n                        let primaryphotos = parr[0];\n                        if (Object.keys(listing['StandardFields']).includes('Photos')) {\n                            primaryphotos = Object.assign(parr[0], sf['Photos'][0])\n                        }\n\n                        let photoentry = Object.assign(parr[0], primaryphotos)\n                        let vids=[];\n                        if(sf.VideosCount>0)\n                        {\n                            vids=sf.Videos\n                        }\n                        let uplist = {\n                            Id: listing.Id,\n                            City: sf.City,\n                            CityKey:'',\n                            ShireKey:'',\n                            Zip: sf.PostalCode,\n                            StreetAddress: sf.StreetNumber + ' ' + sf.StreetName + ' ' + sf.StreetSuffix,\n                            FullAddress: sf.UnparsedAddress,\n                            Price: sf.ListPrice,\n                            Beds: sf.BedsTotal,\n                            Baths: sf.BathsTotal,\n                            Acres: sf.LotSizeAcres,\n                            Photo300: {url: photoentry.Uri300, size:{height:'',width:'',type:'',length:' '}, key: 'Photo300'},\n                            PhotoLarge: {url: photoentry.UriLarge, size:{height:'',width:'',type:'',length:' '}, key: 'PhotoLarge'},\n                            PhotoThumb: {url: photoentry.UriThumb},\n                            PhotoCaption: photoentry.Caption,\n                            YearBuilt: sf.YearBuilt,\n                            LivingArea: sf.LivingArea,\n                            HighSchool: sf.HighSchool,\n                            MiddleOrJuniorSchool: sf.MiddleOrJuniorSchool,\n                            ElementarySchool: sf.ElementarySchool,\n                            Neighborhood: sf.SubdivisionName,\n                            BuildingArea: sf.BuildingAreaTotal,\n                            Type: sf.PropertySubType,\n                            ListPrice: sf.ListPrice,\n                            Latitude: sf.Latitude,\n                            Longitude: sf.Longitude,\n                            MlsStatus: sf.MlsStatus,\n                            PublicRemarks:sf.PublicRemarks,\n                            StreetNumber:sf.StreetNumber,\n                            StreetName:sf.StreetName,\n                            StreetSuffix:sf.StreetSuffix,\n\n                        }\n                        if(sf.Videos.length>0){\n                            uplist['Videos'] = sf.Videos;\n                        }\n                        if(sf.Photos.length>0){\n                            uplist['PrimaryPhotos']=sf.Photos[0];\n                        }\n                        let basic = {\n                            Id: listing.Id,\n                            ShireKey:'',\n                            City: sf.City,\n                            CityKey:'',\n                            Photo300:photoentry.Uri300,\n                            PhotoLarge:photoentry.UriLarge,\n                            PhotoThumb: photoentry.UriThumb,\n                            PublicRemarks:sf.PublicRemarks,\n                            StreetAddress: sf.StreetNumber + ' ' + sf.StreetName + ' ' + sf.StreetSuffix\n                        }\n                        uplist = Object.assign({}, safekey.safe(uplist))\n                        basic = Object.assign({},safekey.safe(basic))\n                        let full = Object.assign(uplist, safekey.safe(sf))\n                        ShireKey = dB.ref('/listings/keys/').push(full).key;\n                        basic.ShireKey = ShireKey;\n                        uplist['ShireKey'] = ShireKey;\n                        full['ShireKey'] = ShireKey;\n\n                        let citykey = dB.ref('/listings/location/city/' + uplist.City + '/keys').push(basic).key;\n                        uplist.CityKey = citykey;\n                        basic.CityKey = citykey;\n                        dB.ref('/listings/keys/' + ShireKey).update(uplist)\n                        dB.ref('/listings/location/city/' + uplist.City + '/keys/'+citykey).update(basic)\n                        let keypath = '/listings/keys/' + uplist.ShireKey;\n                        let idpath = '/listings/id/' + uplist.Id;\n                        let citykeypath = '/listings/location/city/' + uplist.City + '/keys/' + citykey;\n                        let cityidpath = '/listings/location/city/' + uplist.City + '/Id/' + uplist.Id;\n                        let zippath = '/listings/location/zip/' + uplist.Zip + '/' + uplist.Id;\n                        let streetnamepath = '/listings/location/street/name/'+ uplist['StreetName']+'/'+uplist.Id;\n                        let streetnumpath = '/listings/location/street/number/' + uplist['StreetNumber']+'/'+uplist.Id;\n\n                        return sizeAndSave(uplist,uplist,basic,keypath,idpath,citykeypath,cityidpath,zippath,streetnamepath,streetnumpath)\n\n                    }\n                })\n                return Promise.all(dopromises).then(idid => {\n                })\n            }\n        }})\n}\nfunction getPage(ops){\n    console.log('getting with ops:'+JSON.stringify(ops))\n    return new Promise(function(resolve, reject) {\n        setTimeout(() => resolve(ops), 250000 );})//250  seconds\n        .catch((err) => console.log(\"error: \"+JSON.stringify(ops), err));\n}\nfunction getListings(req,res, filter,addr) {\n\n}\nfunction makeUrl(args,zipcode=null,proptype=null,base='https://sparkapi.com/v1/listings?',status=null){\n    let argfilter = args['_filter']?args['_filter']:''\n    let andT = args['_filter']?' And ':''\n    let zipfilter = zipcode?argfilter+andT+`\" PostalCode Eq '${zipcode}'`:argfilter\n    let andZ = zipcode?andT:''\n    let proptypefilter = proptype?zipfilter+andZ+\" PropertyType Eq '\"+proptype+\"'\":zipfilter\n    let andP = zipcode?andT:''\n    let statusFilter = status?proptypefilter+andP+\" MlsStatus Eq '\"+status+\"'\":proptypefilter\n    // let limit = args['_select']?25:25\n    let formatargs = {\n        // _pagination:'1',\n        _orderby:   'City',\n        _filter:    args['_filter'],\n        _limit:     50,\n        // _page:      1,\n        _select:    'Videos,Photos.Uri640,Photos.Uri800,Photos.Uri1024,Photos.Uri1280,Photos.Uri1600,Photos.Uri2048,Photos.UriThumb,Photos.UriLarge,Photos.Uri300,Photos.Caption,PrimaryPhoto,StreetNumber,StreetName,StreetSuffix,PostalCode,ListPrice,City,BedsTotal,BathsTotal,PublicRemarks,PropertyType,MlsStatus,Latitude,ListingId,Longitude,PostalCode,YearBuilt,LivingArea,HighSchool,MiddleOrJuniorSchool,ElementarySchool,SubdivisionName,BuildingAreaTotal,PropertySubType,UnparsedAddress,LotSizeArea,LotSizeAcres,CustomFields',\n    }\n    // formatargs['_page'] = args['_page']?args['_page']:1\n    // formatargs['_select'] = select\n    args = Object.assign({},formatargs)\n    let arr = Object.keys(args).map(key=>{\n        let argEntry = formatargs[key]?formatargs[key]:args[key]\n        let entry = key+\"=\"+argEntry\n        return entry\n    })\n    return base+arr.join('&')\n}\nfunction promiseTo(doThis) {\n    console.log('promised to do something ...')\n    return new Promise(function(resolve, reject) {\n        setTimeout(() => resolve(doThis), 1*doThis);})\n}\nfunction refreshAuth(oa) {\n    let headers = {\n        'X-SparkApi-User-Agent': 'IDX Agent',\n        'Content-Type': 'application/json'\n    };\n    let rauth = {\n        url:'https://sparkapi.com/v1/oauth2/grant',\n        method:'POST',\n        headers: headers,\n        body: oa,\n        json: true\n    };\n\n    rauth.body['grant_type']=\"refresh_token\";\n    console.log('refreshing with :'+JSON.stringify(rauth))\n\n        rp(rauth, function (err, res, body) {\n    }).then(pb=>{        saveOauthData(pb);\n    })\n        .catch(errors.StatusCodeError, function (reason) {\n            console.log('Reason:'+reason+'          #####################   Status Code : '+reason.statusCode)})\n        .catch(errors.RequestError, function (reason) {console.log(reason)})\n\n}\napp.get('/remove', function (req, res) {\n    dB.ref('/listings').remove().then(e=>{\n    res.send('cleared ')})\n})\napp.get('/addr/:addr', function (req, res) {\n    let addr = req.params.addr;\n\n    let filter = \"PropertyType Eq 'A' And MlsStatus Eq 'Active' And (City Eq '\"+addr+\"' Or StreetAddress Eq '\"+addr+\"')\"\n    console.log(filter);\n    let combo = [];\n    let obj = []\n    let pageops = [];\n    let setargs = {\n        _filter: filter\n    };\n    let pagearr = []\n\n    let opsurl = makeUrl(setargs, null, 'A', 'https://sparkapi.com/v1/listings?', 'Active');\n    let authops = {\n        headers: oauthHeaders(),\n        uri: opsurl + '&_pagination=count&_page=1',\n        json: true\n    };\n    console.log('about to request...' + JSON.stringify(authops))\n    rp(authops)\n        .then(pb => {\n            // results.concat(pb['D']['Results']);\n            console.log('pagei:' + JSON.stringify(pb['D']['Pagination']))\n\n            let pages = pb['D']['Pagination']['TotalPages'];\n            let currentpage = pb['D']['Pagination']['CurrentPage'];\n            pagearr.push({headers: oauthHeaders(), uri: opsurl + '&_pagination=1&_page='+pages, json: true})\n\n                for (let page = 1; page < pages; page++) {\n                    let pageReq = {};\n                    let newops = {headers: oauthHeaders(), uri: opsurl + '&_pagination=1&_page=' + page, json: true};\n                    pagearr.push(newops)\n\n                }\n\n            let promisedPages = pagearr.map(ops => {\n                console.log('mapping ops :'+JSON.stringify(ops));\n\n                return requestWithPageOps(ops)\n                })\n            Promise.all(promisedPages)\n             .then(pb=>{\n                 promiseSaveListings(pb)\n                }).then(f=>{\n                res.render('pages/spark', {results:Object.keys(f).map(key=>{\n                    return key = f[key];\n                })\n            })})\n                .catch(errors.StatusCodeError, function (reason) {\n                    // The server responded with a status codes other than 2xx.\n                    // Check\n                    if (reason.statusCode == 401) {\n                        console.log(reason)\n                        refreshAuth(oauthData)\n                    }\n                })\n                // .catch(this.checkStatus)\n                .catch(errors.RequestError, function (reason) {\n                    // reason.cause is the Error object Request would pass into a callback.\n                    console.log(reason.cause)\n                })\n                .catch(e => {\n                    // reason.cause is the Error object Request would pass into a callback.\n                    console.log('e:' + e)\n                })\n            console.log('going!')\n\n        }).catch(errors.StatusCodeError, function (reason) {\n        // The server responded with a status codes other than 2xx.\n        // Check\n        if (reason.statusCode == 401) {\n            console.log(reason)\n            refreshAuth(oauthData)\n        }\n    })\n    // .catch(this.checkStatus)\n        .catch(errors.RequestError, function (reason) {\n            // reason.cause is the Error object Request would pass into a callback.\n            console.log(reason.cause)\n        })\n        .catch(e => {\n            // reason.cause is the Error object Request would pass into a callback.\n            console.log('e:' + e)\n        })})\napp.get('/primary', function (req, res) {\n  ls = [];\n    let cities = ['Manasquan','Wall','Avon-by-the-sea','Sea Girt','Belmar','Spring Lake','Spring Lake Heights','Brielle','Point Pleasant','Point Pleasant Beach','Bay Head','Bradley Beach','Ocean Grove','Neptune','West Belmar','Asbury Park'];\ncities.forEach(addr=>{\n    let filter = \"PropertyType Eq 'A' And MlsStatus Eq 'Active' And (City Eq '\"+addr+\"' Or StreetAddress Eq '\"+addr+\"')\"\n    console.log(filter);\n    let combo = [];\n    let obj = []\n    let pageops = [];\n    let setargs = {\n        _filter: filter\n    };\n    let pagearr = []\n\n    let opsurl = makeUrl(setargs, null, 'A', 'https://sparkapi.com/v1/listings?', 'Active');\n    let authops = {\n        headers: oauthHeaders(),\n        uri: opsurl + '&_pagination=count&_page=1',\n        json: true\n    };\n    console.log('about to request...' + JSON.stringify(authops))\n    rp(authops)\n        .then(pb => {\n            // results.concat(pb['D']['Results']);\n            console.log('pagei:' + JSON.stringify(pb['D']['Pagination']))\n\n            let pages = pb['D']['Pagination']['TotalPages'];\n            let currentpage = pb['D']['Pagination']['CurrentPage'];\n            pagearr.push({headers: oauthHeaders(), uri: opsurl + '&_pagination=1&_page='+pages, json: true})\n\n            for (let page = 1; page < pages; page++) {\n                let pageReq = {};\n                let newops = {headers: oauthHeaders(), uri: opsurl + '&_pagination=1&_page=' + page, json: true};\n                pagearr.push(newops)\n\n            }\n\n            let promisedPages = pagearr.map(ops => {\n                console.log('mapping ops :'+JSON.stringify(ops));\n\n                return requestWithPageOps(ops)\n            })\n            Promise.all(promisedPages)\n                .then(pb=>{\n                    promiseSaveListings(pb)\n                })\n        })\n                .catch(errors.StatusCodeError, function (reason) {\n                    // The server responded with a status codes other than 2xx.\n                    // Check\n                    if (reason.statusCode == 401) {\n                        console.log(reason)\n                        refreshAuth(oauthData)\n                    }\n                })\n                // .catch(this.checkStatus)\n                .catch(errors.RequestError, function (reason) {\n                    // reason.cause is the Error object Request would pass into a callback.\n                    console.log(reason.cause)\n                })\n                .catch(e => {\n                    // reason.cause is the Error object Request would pass into a callback.\n                    console.log('e:' + e)\n                })\n          .catch(errors.StatusCodeError, function (reason) {\n        // The server responded with a status codes other than 2xx.\n        // Check\n        if (reason.statusCode == 401) {\n            console.log(reason)\n            refreshAuth(oauthData)\n        }\n    })\n    // .catch(this.checkStatus)\n        .catch(errors.RequestError, function (reason) {\n            // reason.cause is the Error object Request would pass into a callback.\n            console.log(reason.cause)\n        })\n        .catch(e => {\n            // reason.cause is the Error object Request would pass into a callback.\n            console.log('e:' + e)\n        })})\n    res.render('pages/spark', {results:Object.keys(ls).map(key=>{\n        return key = f[key];})\n})})\napp.get('/callback', function (req, res) {\n    let code = ''\n    let hascode = false;\n    let agentId = '';\n    if (req.query['openid.spark.code']) {\n        code = req.query['openid.spark.code'];\n        hascode=true;\n    }\n    if (req.query['openid_spark_code']) {\n        code = req.query['openid_spark_code'];\n        hascode=true;\n    }\n    if (req.query['code']){\n        code = req.query['code'];\n        hascode=true;\n    }\n\n    if (req.query['openid.spark.state']) {\n        agentId = req.query['openid.spark.state']\n    }\n    if(req.query['state']) {\n        agentId = req.query['state']\n    }\n    if(hascode==true){\n        fbinit.database().ref('/sparkauth/oauth').update({code:code}).then(function () {\n            console.log('updated code :'+code);\n        })\n    }\n    else {\n        console.log('did not update code : '+code+' hascode set to :'+hascode?'true':'false')\n    }\n    // console.log(req.query['openid.spark.code'] + ' : from callback');\n    let options;\n    fbinit.database().ref('/sparkauth/oauth').once(\"value\", function(snapshot) {\n        options = {\n            method: 'POST',\n            uri: 'https://sparkapi.com/v1/oauth2/grant',\n            headers: {\n                'X-SparkApi-User-Agent': 'Idx Agent',\n                'Content-Type': 'application/json'\n            },\n            body:{\n                client_id: snapshot.val().client_id,\n                client_secret: snapshot.val().client_secret,\n                grant_type: 'authorization_code',\n                code: code,\n                redirect_uri: snapshot.val().redirect_uri\n            },\n            json:true\n        };\n        console.log('using options :'+JSON.stringify(options))\n        oauthData.client_id= snapshot.val().client_id\n        oauthData.client_secret= snapshot.val().client_secret\n        oauthData.access_token= snapshot.val().access_token\n        oauthData.refresh_token= snapshot.val().refresh_token\n        oauthData.redirect_uri= snapshot.val().redirect_uri\n        oauthData.expires_at= snapshot.val().expires_at?snapshot.val().expires_at:\"0\"\n        oauthData.code = snapshot.val().code\n\n    }, function (errorObject) {\n        console.log(\"The read failed: \" + errorObject.code);\n    }).then(function () {\n    rp(options)\n        .then(pb=>{\n            saveOauthData(pb)\n            res.render('pages/spark', {results:Object.keys(pb).map(key=> key = pb[key])});\n            // res.send('<strong>zip codes</strong><br><a href=\"/zip/07717\"><br/><strong>zip 07717</strong><br><a href=\"/zip/08736\"><strong>zip 08736</strong><br/><br/><strong>Log in</strong> with Spark</a>' +\n            //     '<a href=\"https://sparkplatform.com/oauth2?response_type=code&client_id='+oauthData.client_id+'&redirect_uri='+oauthData.redirect_uri+'\">Agent <strong>login</strong></a>');\n        })\n        .catch(function(err) {\n            res.send(err + 'oops');\n            console.log(err + 'uhoh');\n            console.log('request failed', err)})\n    });\n})\n\napp.get('/auth', (req, res) => {\n    var uri = \"https://sparkplatform.com/openid?openid.mode=checkid_setup&openid.return_to=\"+oauthData.redirect_uri+\"&openid.spark.client_id=\"+oauthData.client_id+\"&openid.spark.combined_flow=true\";\n    res.location(uri);\n    res.send('<a href=\"https://sparkplatform.com/openid?openid.mode=checkid_setup&openid.return_to='+oauthData.redirect_uri+'&openid.spark.client_id='+oauthData.client_id+'&openid.spark.combined_flow=true\">auth</a>')\n\n});\n\n"]}