{"version":3,"sources":["../../src/index.js"],"names":["app","listingObj","BathsTotal","BedsTotal","City","Id","Latitude","ListPrice","ListingId","Longitude","MlsId","MlsStatus","PhotoCaption","PhotoLarge","PhotoThumb","Photos","Caption","Uri300","UriLarge","UriThumb","PostalCode","PropertySubType","PropertyType","PublicRemarks","StreetName","StreetNumber","StreetSuffix","YearBuilt","completed","geo","set","process","env","PORT","use","static","__dirname","get","request","response","render","listen","console","log","Promise","require","size","promisify","ls","fbinit","initializeApp","serviceAccount","databaseURL","oauthData","client_id","client_secret","access_token","refresh_token","redirect_uri","expires_at","code","dB","database","ref","on","snapshot","val","JSON","stringify","errorObject","idsnap","keysnap","checkStatus","statusCode","refreshAuth","error","Error","statusText","saveOauthData","od","update","handleCallback","req","res","oauthHeaders","requestWithPageOps","ops","resolve","sizeAndSave","most","full","basic","keypath","idpath","citykey","cityid","zippath","streetpath","streetnumpath","sizeLarge","url","err","dimensions","length","safe","entry","ShireKey","size300","Photo300","all","then","donedoing","catch","e","promiseSaveListings","listings","updates","obj","allupdates","entries","forEach","lsts","D","dopromises","map","exists","child","listing","currentkey","once","current","headers","uri","json","lkey","Object","assign","pb","some","Zip","StreetAddressOnly","FullAddress","Price","Beds","Baths","Acres","LotSizeAcres","LivingArea","HighSchool","MiddleOrJuniorSchool","ElementarySchool","Neighborhood","SubdivisionName","BuildingArea","BuildingAreaTotal","Type","All","Videos","PrimaryPhotos","basicpath","citykeypath","cityidpath","citystatuskeypath","citystatusidpath","streetnamepath","parr","ResourceUri","Name","Uri640","Uri800","Uri1024","Uri1280","Uri1600","Uri2048","Primary","sf","primaryphotos","keys","includes","photoentry","vids","VideosCount","suf","sao","uplist","UnparsedAddress","height","width","type","key","push","arru","getPage","reject","setTimeout","getListings","filter","addr","makeUrl","args","zipcode","proptype","base","status","argfilter","andT","zipfilter","andZ","proptypefilter","andP","statusFilter","formatargs","_orderby","_filter","_limit","_select","arr","argEntry","join","promiseTo","doThis","oa","authbody","grant_type","rauth","method","body","StatusCodeError","reason","RequestError","remove","send","params","combo","pageops","setargs","pagearr","opsurl","authops","pages","currentpage","page","pageReq","newops","promisedPages","results","f","cause","cities","hascode","agentId","query","options","location"],"mappings":"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","file":"index.js","sourcesContent":["import express from \"express\";\nimport fb from 'firebase'\nimport rp from 'request-promise';\nlet app = express();\nimport safekey from 'firebase-safekey';\nlet listingObj = {BathsTotal:null,BedsTotal:null,City:null,Id:null,Latitude:null,ListPrice:null,ListingId:null,Longitude:null,MlsId:null,MlsStatus:null,PhotoCaption:'Loading',PhotoLarge:'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire320x220.png',PhotoThumb:'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire110x75.png',Photos:[{Caption:'Loading',Uri300:'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire110x75.png',UriLarge:'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire110x75.png',UriThumb:'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire110x75.png'}],PostalCode:null,PropertySubType:null,PropertyType:null,PublicRemarks:'Loading',StreetName:null,StreetNumber:null,StreetSuffix:null,YearBuilt:null,completed:null,geo:{}};\n\napp.set('port', (process.env.PORT || 5000));\n\napp.use(express.static(__dirname + '/public'));\n\n// views is directory for all template files\napp.set('views', __dirname + '/views');\napp.set('view engine', 'ejs');\n\napp.get('/', function(request, response) {\n    response.render('pages/index');\n});\n\napp.listen(app.get('port'), function() {\n    console.log('Node app is running on port', app.get('port'));\n});\n\n//import path from 'path';\n\n//let server = require('https').Server(app);\nconst Promise = require('bluebird'),\n    size = Promise.promisify(require('request-image-size'));\nimport errors from 'request-promise/errors';\nlet ls = [];\nlet fbinit = fb.initializeApp({\n    serviceAccount: {\n        \"type\": \"service_account\",\n        \"project_id\": \"sparkidxapi\",\n        \"private_key_id\": \"81085b6ba0707d1c02831f6b4b0b03a389f134dc\",\n        \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDgM1W+jsFYFGca\\n7TbB6mquembWVNI5BHXR0rO9ApMmLzfvW435Fh3ONjVFf1xkHOk8LpFpSKtzlKow\\ndxqZmeAJCRGRmqA0Tu3KGy2BvWmzkU+COezS8oLEcgSW7OJUsToxLwp3nvjKSBF8\\n50Vzsvu3WvlUzEmUkEB6InKBvgfhXAAi/YTRW6yhsIE+SZZ5lkhmEPaNALqWtJCx\\ni5Qw07Oz7OgeM0duJFMX3vL++y+SWkS5RM1u2KSrmQFPxD5tefutyIGM8JNeHABY\\n0FV5OtYulL8rspo6fqtI9kOuLXaNPYfWi7My4LsEbdX62iw2qOzdz62LIp5Op2gD\\nEFbJfmQxAgMBAAECggEBAJZQdKVtCp3mF/aKohLC+sF+GSKL/eHyZpfFv3HynvuT\\n3tmgtYAR3uvZlj/BEw2gAJOz2RQQf7rfKneR8wiWjQkhxmCrnctUO8MsE4ePmaWl\\nv/vcoDYSF7BjjUYvDdOgexZspoTq1XyxcuAeIodesbsNyGqdCJwNVt1L6R+pa5kg\\nF0eMozszPQXGeMfDFpjhpwXBcq67bFXdk4SqlvDeNSHxjWfl7/Hr0Kr8v0JnoJcw\\nuPxwLi6mvHVpYSVqpseQkr8aZ6xypT1+2ztkivMmqooRXFUaclxxIO2K1xCmncQg\\neGabGBOPzw2Zh/UnCnDfDYeaZ5k4pKNqfjBQM6o3il0CgYEA8iVXXfMjCVcdC/xq\\nrOAPir6jXy4u3f2ZSxMmDHgG6IFCxCPwhvjCE3Uv84Wnr6HZ114gSMGFIq9ZS22U\\nt7Uejq7UELVVn4pDAzPhdlJU9mBwTBcdoB1bJx1KtfCt8b9+M30H5JaMPJ+x22Z7\\nyWxhwMPu0N3TGuy2Z8Ue0zKvsLMCgYEA7Qcm8sm+uliCcS7ypNmbn2nRiEp9yFan\\nGZUb4flKO6xHJ/vBj60UEYKYkL63syXDdQ6yAV8jZlJHxVGIT7yJ0AhVkNo/oK4f\\nPNXiO4dw+N8ReJhcjwKmU0dOMK4rzH9QGma4WaIO1NXXhap2PbBlF/Yy4IlBnNHW\\n+7Faf1zUQYsCgYEAsHTBu/cIWzAePLPO0Pfem47c4ul2wdKiOPFVUtTMw/YeP2yp\\nRNJWK3PEY8PMNNLPOoCfKiXL7UC2456RN2ZHRFbmtt5N7RsGRnkyHdVVkM0qSGi3\\n8Aw0dsaDwR4IxBh10POWIuAKhcsiAu4l2tyeR6kAiTh9NCu3qNse4W0YVr0CgYBt\\njqS+C+oQj+CbGCwnbj20TWEAMg45j3PlKzqcFHHvaw3ouUEae9GO1mJWZRDbyVSy\\nwnwcjjD6loV9+tWapXa9pVyHe5l1V4YwxFuxUEUzg0e8ChCeOYdPbuIBNkAgYahQ\\ny7HiHDnmvoDD06qbkPDpRm71wfuF1Kgd5jgCLpIdSQKBgQCezHrV+ZHOvoxljR+x\\n3/kpwfHyWrqIbETvUz2TbjMc52igcdr09hbsp4mNTl0uy6kMk1MMHVCKNgWdS48x\\n6crGgSU/sIugJ9U3Ph7SWEf4wjPYgFRbB8dcbK/+M7SvCJ2/NR8UZKWXxa5TpO4+\\n2ElOQBtoUlLTnACetImf5YcchA==\\n-----END PRIVATE KEY-----\\n\",\n        \"client_email\": \"apiauth@sparkidxapi.iam.gserviceaccount.com\",\n        \"client_id\": \"113743275477969379982\",\n        \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n        \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n        \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n        \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/apiauth%40sparkidxapi.iam.gserviceaccount.com\"\n    },\n    databaseURL: \"https://sparkidxapi.firebaseio.com\"\n});\n\nlet oauthData = {\n    client_id: ' ',\n    client_secret: '',\n    access_token: '',\n    refresh_token: '',\n    redirect_uri: '',\n    expires_at: '',\n    code:''\n};\nlet dB = fbinit.database();\nfbinit.database().ref('/sparkauth/oauth').on(\"value\", function(snapshot) {\n    oauthData.client_id= snapshot.val().client_id;\n    oauthData.client_secret= snapshot.val().client_secret;\n    oauthData.access_token= snapshot.val().access_token;\n    oauthData.refresh_token= snapshot.val().refresh_token;\n    oauthData.redirect_uri= snapshot.val().redirect_uri;\n    oauthData.expires_at= snapshot.val().expires_at?snapshot.val().expires_at:\"0\";\n    oauthData.code = snapshot.val().code;\n    console.log(\"auth updated!\"+JSON.stringify(oauthData));\n\n}, function (errorObject) {\n    console.log(\"The read failed: \" + errorObject.code);\n});\nlet idsnap;\nlet keysnap;\nfbinit.database().ref('/listings/keys').on(\"value\", function(snapshot) {\n    keysnap = snapshot;\n\n}, function (errorObject) {\n    console.log(\"The read failed: \" + errorObject.code);\n});\nfbinit.database().ref('/listings/id').on(\"value\", function(snapshot) {\n    idsnap = snapshot;\n\n}, function (errorObject) {\n    console.log(\"The read failed: \" + errorObject.code);\n});\n\nfunction checkStatus(response){\n    if (response.statusCode == 401) {\n        console.log('response = 401 ? '+response.statusCode);\n        // let oauthData = Object.assign({},oauthData)\n        // let fBdB = this.fBdB\n        return refreshAuth(oauthData);\n    }\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n        return response\n    } else {\n        let error = new Error(response.statusText);\n        error.response = response;\n        console.log('got error while checking status '+error);\n    }\n}\nfunction saveOauthData(od) {\n    console.log(\"saving OauthData ->\"+JSON.stringify(od));\n    return dB.ref('/sparkauth/oauth').update(od)\n}\nfunction handleCallback(req, res) {\n\n}\n//https://searchidx.herokuapp.com/callback?openid.assoc_handle=%7BHMAC-SHA1%7D%7B58574516%7D%7B6I%2BC%2Bg%3D%3D%7D&openid.claimed_id=https%3A%2F%2Fsparkplatform.com%2Fopenid%2Fuserid%2Fmo.1524%3Fsession_id%3D6e338a49c2eef5f2d4e36270c0647de5&openid.identity=https%3A%2F%2Fsparkplatform.com%2Fopenid%2Fuserid%2Fmo.1524%3Fsession_id%3D6e338a49c2eef5f2d4e36270c0647de5&openid.mode=id_res&openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0&openid.ns.spark=http%3A%2F%2Fsparkplatform.com%2Fextensions%2Fspark%2F1.0&openid.ns.sreg=http%3A%2F%2Fopenid.net%2Fextensions%2Fsreg%2F1.1&openid.op_endpoint=https%3A%2F%2Fsparkplatform.com%2Fopenid%3Fsession_id%3D6e338a49c2eef5f2d4e36270c0647de5&openid.response_nonce=2016-12-19T02%3A25%3A26ZV3Hhkt&openid.return_to=https%3A%2F%2Fsearchidx.herokuapp.com%2Fcallback&openid.sig=e582hxh5GzHutv0z%2FMIayGji6cw%3D&openid.signed=assoc_handle%2Cclaimed_id%2Cidentity%2Cmode%2Cns%2Cns.spark%2Cns.sreg%2Cop_endpoint%2Cresponse_nonce%2Creturn_to%2Csigned%2Cspark.code%2Csreg.fullname%2Csreg.nickname&openid.spark.code=6tbc7lcwmiedsbwrlnpokkrdb&openid.sreg.fullname=Paul+Amato&openid.sreg.nickname=20140811174925623895000000\nfunction oauthHeaders(){\n    return {\n        'X-SparkApi-User-Agent': 'DevApp',\n        'Authorization': 'OAuth '+oauthData.access_token,\n        'Content-Type': 'application/json'\n    };\n}\nfunction requestWithPageOps(ops){\n    return Promise.resolve(rp(ops))\n}\nfunction sizeAndSave(most,full,basic,keypath,idpath,citykey,cityid,zippath,streetpath,streetnumpath){\n\n        let sizeLarge = size({url: basic.PhotoLarge},function (err, dimensions, length) {\n            full['PhotoLarge']['size'] = safekey.safe(dimensions);\n            let entry={};\n\n           // let most = Object.assign({},mostof)\n\n            // idpath.update(nbasic);\n            // citypath.update(nbasic);\n            // zippath.update(nbasic);\n            // streetpath.update(nbasic);\n            // streetnumpath.update(nbasic);\n            entry[idpath] = most.ShireKey;//entry[idpath] = {ShireKey:most.ShireKey,City:most.City,PhotoThumb:full.PhotoThumb.url,StreetAddressOnly:full.StreetAddressOnly};\n            entry[keypath] = full;\n            entry[citykey] = basic;\n            entry[cityid] = basic.ShireKey;\n            entry[zippath]=basic.ShireKey;\n            entry[streetpath]=basic.ShireKey;\n            entry[streetnumpath]=basic.ShireKey;\n            return dB.ref('/').update(entry)\n        });\n        let size300 = size({url: basic.Photo300},function (err, dimensions, length) {\n            full['Photo300']['size'] = safekey.safe(dimensions);\n            let entry={};\n            // let most = Object.assign({},full)\n\n            // idpath.update(nbasic);\n            // citypath.update(nbasic);\n            // zippath.update(nbasic);\n            // streetpath.update(nbasic);\n            // streetnumpath.update(nbasic);\n            entry[keypath] = full;\n            entry[idpath] = most.ShireKey;//entry[idpath] = {ShireKey:most.ShireKey,City:most.City,PhotoThumb:full.PhotoThumb.url,StreetAddressOnly:full.StreetAddressOnly};\n            entry[citykey] = basic;\n            entry[cityid] = basic.ShireKey;\n            entry[zippath]=basic.ShireKey;\n            entry[streetpath]=basic.ShireKey;\n            entry[streetnumpath]=basic.ShireKey;\n            return dB.ref('/').update(entry)\n        });\n\n       return Promise.all([sizeLarge,size300]).then(donedoing=>{\n            console.log('sized-'+JSON.stringify({donedoing}))\n        }).catch(e=>{\n           console.log(e)\n                })\n\n\n}\nfunction promiseSaveListings(listings){\n\n    let updates = {};\n    let obj = [];\n        let allupdates=[];\n        let ShireKey;\n        let entries;\n        listings.forEach(lsts=>{\n        if (!lsts.D) {\n            console.log('no D found in results - inside :'+JSON.stringify(lsts));\n            return Promise.resolve(lsts)\n        }\n        else {\n            if (lsts['D']['Results']) {\n\n                let dopromises = lsts['D']['Results'].map(listing => {\n                    let exists = idsnap.child(listing.Id).exists();\n                    if (exists == true) {\n                        let currentkey = idsnap.child(listing.Id).val();\n                        fbinit.database().ref('/listings/keys/'+currentkey).once(\"value\", function(snapshot) {\n\n                            let current = snapshot.val();\n                            return rp({headers: oauthHeaders(), uri:'https://sparkapi.com/v1/listings/'+current.Id+'?_expand=Photos', json: true})\n                                .then(pb=>{\n                                     let lkey = currentkey;\n                                    let full = Object.assign(current,safekey.safe(pb['D']['Results'][0]['StandardFields']));\n                                    let some = Object.assign(current,safekey.safe(pb['D']['Results'][0]['StandardFields']));\n                                    let all = Object.assign(some,safekey.safe(pb['D']['Results'][0]['CustomFields']));\n                                    let entry = {};\n                                    let most = {\n                                        Id: full.Id,\n                                        City: full.City,\n                                        ShireKey:full.ShireKey,\n                                        Zip: full.PostalCode,\n                                        StreetAddressOnly: full.StreetAddressOnly,\n                                        FullAddress: full.FullAddress,\n                                        Price: full.ListPrice,\n                                        Beds: full.BedsTotal,\n                                        Baths: full.BathsTotal,\n                                        Acres: full.LotSizeAcres,\n                                        Photo300: full.Photo300,\n                                        PhotoLarge: full.PhotoLarge,\n                                        PhotoThumb: full.PhotoThumb,\n                                        PhotoCaption: full.PhotoCaption,\n                                        YearBuilt: full.YearBuilt,\n                                        LivingArea: full.LivingArea,\n                                        HighSchool: full.HighSchool,\n                                        MiddleOrJuniorSchool: full.MiddleOrJuniorSchool,\n                                        ElementarySchool: full.ElementarySchool,\n                                        Neighborhood: full.SubdivisionName,\n                                        BuildingArea: full.BuildingAreaTotal,\n                                        Type: full.PropertySubType,\n                                        ListPrice: full.ListPrice,\n                                        Latitude: full.Latitude,\n                                        Longitude: full.Longitude,\n                                        MlsStatus: full.MlsStatus,\n                                        PublicRemarks:full.PublicRemarks,\n                                        StreetNumber:full.StreetNumber,\n                                        StreetName:full.StreetName,\n                                        StreetSuffix:full.StreetSuffix,\n                                        All:all\n                                    };\n                                    if(full.Videos){\n                                        most['Videos'] = full.Videos;\n                                    }\n                                    if(full.Photos){\n                                        most['PrimaryPhotos']=current.PrimaryPhotos;\n                                    }\n                                    let basic = {\n                                        Id: full.Id,\n                                        ShireKey:full.ShireKey,\n                                        City: full.City,\n                                        Photo300:full.Photo300.url,\n                                        PhotoLarge:full.PhotoLarge.url,\n                                        PhotoThumb:full.PhotoThumb.url,\n                                        PublicRemarks:full.PublicRemarks,\n                                        StreetAddressOnly: full.StreetAddressOnly,\n                                        ListPrice:full.ListPrice,\n                                        BedsTotal:full.BedsTotal,\n                                        BathsTotal:full.BathsTotal,\n                                        MlsStatus: full.MlsStatus,\n                                        Latitude: full.Latitude,\n                                        Longitude: full.Longitude,\n                                        Zip: full.PostalCode\n                                    };\n\n                                    basic = Object.assign({},safekey.safe(basic));\n                                    ShireKey = current.ShireKey;\n                                    let keypath = '/listings/keys/' + current.ShireKey;\n                                    let idpath = '/listings/id/' + current.Id;\n                                    let basicpath = '/listings/basic/'+current.ShireKey;\n\n                                    let citykeypath = '/listings/location/city/' + current.City + '/keys/' + ShireKey;\n                                    let cityidpath = '/listings/location/city/' + current.City + '/id/' + current.Id;\n                                    let citystatuskeypath = '/listings/location/city/' + most.City + '/'+most.MlsStatus+'/key/'+most.ShireKey;\n                                    let citystatusidpath = '/listings/location/city/' + most.City + '/'+most.MlsStatus+'/id/'+most.Id;\n                                    let zippath = '/listings/location/zip/' + current.Zip + '/' + current.Id;\n                                    let streetnamepath = '/listings/location/street/name/'+ current['StreetName']+'/'+current.Id;\n                                    let streetnumpath = '/listings/location/street/number/' + current['StreetNumber']+'/'+current.Id;\n                                    entry[basicpath]=basic;\n                                    entry[idpath] = most.ShireKey;//entry[idpath] = {ShireKey:most.ShireKey,City:most.City,PhotoThumb:full.PhotoThumb.url,StreetAddressOnly:full.StreetAddressOnly};\n                                    entry[keypath] = most;\n                                    entry[citykeypath] = basic;\n                                    entry[cityidpath] = basic;\n                                    entry[zippath]=basic;\n                                    entry[streetnamepath]=basic;\n                                    entry[streetnumpath]=basic;\n                                    dB.ref('/').update(entry);\n                                     sizeAndSave(most,most,basic,keypath,idpath,citystatuskeypath,citystatusidpath,zippath,streetnamepath,streetnumpath)\n                                })});\n\n                    } else {\n                        let parr = [\n                            {\n                                ResourceUri: \"unset\",\n                                Id: \"0\",\n                                Name: \"PlaceHolder\",\n                                Caption: \"PlaceHolder\",\n                                UriThumb: \"https://searchidx.herokuapp.com/placeholders/shireThumb.png\",\n                                Uri300: \"https://searchidx.herokuapp.com/placeholders/shire300.png\",\n                                Uri640: \"https://searchidx.herokuapp.com/placeholders/shire640.png\",\n                                Uri800: \"https://searchidx.herokuapp.com/placeholders/shire800.png\",\n                                Uri1024: \"https://searchidx.herokuapp.com/placeholders/shire1024.png\",\n                                Uri1280: \"https://searchidx.herokuapp.com/placeholders/shire1280.png\",\n                                Uri1600: \"https://searchidx.herokuapp.com/placeholders/shire1600.png\",\n                                Uri2048: \"https://searchidx.herokuapp.com/placeholders/shire2048.png\",\n                                UriLarge: \"https://searchidx.herokuapp.com/placeholders/shire1024.png\",\n                                Primary: true\n                            }\n                        ];\n                        let sf = Object.assign({}, listing['StandardFields']);\n                        let primaryphotos = parr[0];\n                        if (Object.keys(listing['StandardFields']).includes('Photos')) {\n                            primaryphotos = Object.assign(parr[0], sf['Photos'][0])\n                        }\n\n                        let photoentry = Object.assign(parr[0], primaryphotos);\n                        let vids=[];\n                        if(sf.VideosCount>0)\n                        {\n                            vids=sf.Videos\n                        }\n                        let suf = sf.StreetSuffix?sf.StreetSuffix:'';\n                        let sao = sf.StreetNumber + ' ' + sf.StreetName + ' ' + suf;\n                        let uplist = {\n                            Id: listing.Id,\n                            City: sf.City,\n                            ShireKey:'',\n                            Zip: sf.PostalCode,\n                            StreetAddressOnly:sao ,\n                            FullAddress: sf.UnparsedAddress,\n                            Price: sf.ListPrice,\n                            Beds: sf.BedsTotal,\n                            Baths: sf.BathsTotal,\n                            Acres: sf.LotSizeAcres,\n                            Photo300: {url: photoentry.Uri300, size:{height:'',width:'',type:'',length:' '}, key: 'Photo300'},\n                            PhotoLarge: {url: photoentry.UriLarge, size:{height:'',width:'',type:'',length:' '}, key: 'PhotoLarge'},\n                            PhotoThumb: {url: photoentry.UriThumb},\n                            PhotoCaption: photoentry.Caption,\n                            YearBuilt: sf.YearBuilt,\n                            LivingArea: sf.LivingArea,\n                            HighSchool: sf.HighSchool,\n                            MiddleOrJuniorSchool: sf.MiddleOrJuniorSchool,\n                            ElementarySchool: sf.ElementarySchool,\n                            Neighborhood: sf.SubdivisionName,\n                            BuildingArea: sf.BuildingAreaTotal,\n                            Type: sf.PropertySubType,\n                            ListPrice: sf.ListPrice,\n                            Latitude: sf.Latitude,\n                            Longitude: sf.Longitude,\n                            MlsStatus: sf.MlsStatus,\n                            PublicRemarks:sf.PublicRemarks,\n                            StreetNumber:sf.StreetNumber,\n                            StreetName:sf.StreetName,\n                            StreetSuffix:sf.StreetSuffix\n                        };\n                        if(sf.Videos.length>0){\n                            uplist['Videos'] = sf.Videos;\n                        }\n                        if(sf.Photos.length>0){\n                            uplist['PrimaryPhotos']=sf.Photos[0];\n                        }else\n                        {\n                            uplist['PrimaryPhotos']=photoentry;\n                        }\n                        let basic = {\n                            Id: listing.Id,\n                            ShireKey:'',\n                            City: sf.City,\n                            Photo300:photoentry.Uri300,\n                            PhotoLarge:photoentry.UriLarge,\n                            PhotoThumb: photoentry.UriThumb,\n                            PublicRemarks:sf.PublicRemarks,\n                            StreetAddressOnly: sao,\n                            ListPrice:sf.ListPrice,\n                            BedsTotal:sf.BedsTotal,\n                            BathsTotal:sf.BathsTotal,\n                            MlsStatus: sf.MlsStatus,\n                            Latitude: sf.Latitude,\n                            Longitude: sf.Longitude,\n                            Zip: sf.PostalCode\n\n                        };\n                        uplist = Object.assign({}, safekey.safe(uplist));\n                        basic = Object.assign({},safekey.safe(basic));\n                        let full = Object.assign(uplist, safekey.safe(sf));\n                        ShireKey = dB.ref('/listings/keys/').push(full).key;\n                        let arru = {}\n\n                        basic.ShireKey = ShireKey;\n                        uplist['ShireKey'] = ShireKey;\n                        full['ShireKey'] = ShireKey;\n                        arru['/listings/basic/'+ShireKey]=basic\n                        arru['/listings/keys/' + ShireKey]=uplist\n                        arru['/listings/location/city/' + uplist.City + '/'+uplist.MlsStatus+'/id/'+uplist.Id]=ShireKey;\n                        arru['/listings/location/city/' + uplist.City + '/'+uplist.MlsStatus+'/key/'+uplist.ShireKey]=basic;\n                        dB.ref('/').update(arru);\n                        let keypath = '/listings/keys/' + uplist.ShireKey;\n                        let idpath = '/listings/id/' + uplist.Id;\n                        let citykeypath = '/listings/location/city/' + uplist.City + '/'+uplist.MlsStatus+'/key/'+uplist.ShireKey;\n                        let cityidpath = '/listings/location/city/' + uplist.City + '/'+uplist.MlsStatus+'/id/'+uplist.Id;\n                        let zippath = '/listings/location/zip/' + uplist.Zip + '/' + uplist.Id;\n                        let streetnamepath = '/listings/location/street/name/'+ uplist['StreetName']+'/'+uplist.Id;\n                        let streetnumpath = '/listings/location/street/number/' + uplist['StreetNumber']+'/'+uplist.Id;\n\n                        return sizeAndSave(uplist,uplist,basic,keypath,idpath,citykeypath,cityidpath,zippath,streetnamepath,streetnumpath)\n\n                    }\n                });\n                return Promise.all(dopromises).then(idid => {\n                })\n            }\n        }})\n}\nfunction getPage(ops){\n    console.log('getting with ops:'+JSON.stringify(ops));\n    return new Promise(function(resolve, reject) {\n        setTimeout(() => resolve(ops), 250000 );})//250  seconds\n        .catch((err) => console.log(\"error: \"+JSON.stringify(ops), err));\n}\nfunction getListings(req,res, filter,addr) {\n\n}\nfunction makeUrl(args,zipcode=null,proptype=null,base='https://sparkapi.com/v1/listings?',status=null){\n    let argfilter = args['_filter']?args['_filter']:'';\n    let andT = args['_filter']?' And ':'';\n    let zipfilter = zipcode?argfilter+andT+`\" PostalCode Eq '${zipcode}'`:argfilter;\n    let andZ = zipcode?andT:'';\n    let proptypefilter = proptype?zipfilter+andZ+\" PropertyType Eq '\"+proptype+\"'\":zipfilter;\n    let andP = zipcode?andT:'';\n    let statusFilter = status?proptypefilter+andP+\" MlsStatus Eq '\"+status+\"'\":proptypefilter;\n    // let limit = args['_select']?25:25\n    let formatargs = {\n        // _pagination:'1',\n        _orderby:   'City',\n        _filter:    args['_filter'],\n        _limit:     50,\n        // _page:      1,\n        _select:    'Videos,Photos.Uri640,Photos.Uri800,Photos.Uri1024,Photos.Uri1280,Photos.Uri1600,Photos.Uri2048,Photos.UriThumb,Photos.UriLarge,Photos.Uri300,Photos.Caption,PrimaryPhoto,StreetNumber,StreetName,StreetSuffix,PostalCode,ListPrice,City,BedsTotal,BathsTotal,PublicRemarks,PropertyType,MlsStatus,Latitude,ListingId,Longitude,PostalCode,YearBuilt,LivingArea,HighSchool,MiddleOrJuniorSchool,ElementarySchool,SubdivisionName,BuildingAreaTotal,PropertySubType,UnparsedAddress,LotSizeArea,LotSizeAcres,CustomFields',\n    };\n    // formatargs['_page'] = args['_page']?args['_page']:1\n    // formatargs['_select'] = select\n    args = Object.assign({},formatargs);\n    let arr = Object.keys(args).map(key=>{\n        let argEntry = formatargs[key]?formatargs[key]:args[key];\n        let entry = key+\"=\"+argEntry;\n        return entry\n    });\n    return base+arr.join('&')\n}\nfunction promiseTo(doThis) {\n    console.log('promised to do something ...');\n    return new Promise(function(resolve, reject) {\n        setTimeout(() => resolve(doThis), 1*doThis);})\n}\nfunction refreshAuth(oa) {\n    let headers = {\n        'X-SparkApi-User-Agent': 'IDX Agent',\n        'Content-Type': 'application/json'\n    };\n    let authbody = Object.assign(oauthData,{grant_type:'refresh_token'});\n    let rauth = {\n        url:'https://sparkapi.com/v1/oauth2/grant',\n        method:'POST',\n        headers: headers,\n        body: authbody,\n        json: true\n    };\n\n    console.log('refreshing with :'+JSON.stringify(rauth.body));\n\n        rp(rauth).then(pb=>{\n            console.log('got response ... :'+pb);\n            saveOauthData(pb);\n    })\n        .catch(errors.StatusCodeError, function (reason) {\n            console.log('Reason:'+reason+'          #####################   Status Code : '+reason.statusCode)})\n        .catch(errors.RequestError, function (reason) {console.log(reason)})\n\n}\napp.get('/remove', function (req, res) {\n    dB.ref('/listings').remove().then(e=>{\n    res.send('cleared ')})\n});\napp.get('/addr/:addr', function (req, res) {\n    fbinit.database().ref('/listings/id').once(\"value\", function(snapshot) {\n        idsnap = snapshot;\n    let addr = req.params.addr;\n\n    let filter = \"PropertyType Eq 'A' And MlsStatus Eq 'Active' And (City Eq '\"+addr+\"' Or StreetAddress Eq '\"+addr+\"')\";\n    console.log(filter);\n    let combo = [];\n    let obj = [];\n    let pageops = [];\n    let setargs = {\n        _filter: filter\n    };\n    let pagearr = [];\n\n    let opsurl = makeUrl(setargs, null, 'A', 'https://sparkapi.com/v1/listings?', 'Active');\n    let authops = {\n        headers: oauthHeaders(),\n        uri: opsurl + '&_pagination=count&_page=1',\n        json: true\n    };\n    console.log('about to request...' + JSON.stringify(authops));\n    rp(authops)\n        .then(pb => {\n            // results.concat(pb['D']['Results']);\n            console.log('pagei:' + JSON.stringify(pb['D']['Pagination']));\n\n            let pages = pb['D']['Pagination']['TotalPages'];\n            let currentpage = pb['D']['Pagination']['CurrentPage'];\n            pagearr.push({headers: oauthHeaders(), uri: opsurl + '&_pagination=1&_page='+pages, json: true});\n\n                for (let page = 1; page < pages; page++) {\n                    let pageReq = {};\n                    let newops = {headers: oauthHeaders(), uri: opsurl + '&_pagination=1&_page=' + page, json: true};\n                    pagearr.push(newops)\n\n                }\n\n            let promisedPages = pagearr.map(ops => {\n                console.log('mapping ops :'+JSON.stringify(ops));\n\n                return requestWithPageOps(ops)\n                });\n            Promise.all(promisedPages)\n             .then(pb=>{\n                 promiseSaveListings(pb)\n                }).then(f=>{\n                res.render('pages/spark', {results:Object.keys(f).map(key=>{\n                    return key = f[key];\n                })\n            })})\n                .catch(errors.StatusCodeError, function (reason) {\n                    // The server responded with a status codes other than 2xx.\n                    // Check\n                    if (reason.statusCode == 401) {\n                        console.log(reason);\n                        refreshAuth(oauthData)\n                    }\n                })\n                // .catch(this.checkStatus)\n                .catch(errors.RequestError, function (reason) {\n                    // reason.cause is the Error object Request would pass into a callback.\n                    console.log(reason.cause)\n                })\n                .catch(e => {\n                    // reason.cause is the Error object Request would pass into a callback.\n                    console.log('e:' + e)\n                });\n            console.log('going!')\n\n        }).catch(errors.StatusCodeError, function (reason) {\n        // The server responded with a status codes other than 2xx.\n        // Check\n        if (reason.statusCode == 401) {\n            console.log(reason);\n            refreshAuth(oauthData)\n        }\n    })\n    // .catch(this.checkStatus)\n        .catch(errors.RequestError, function (reason) {\n            // reason.cause is the Error object Request would pass into a callback.\n            console.log(reason.cause)\n        })\n        .catch(e => {\n            // reason.cause is the Error object Request would pass into a callback.\n            console.log('e:' + e)\n        })}, function (errorObject) {\n        console.log(\"The read failed: \" + errorObject.code);\n    });\n});\napp.get('/primary', function (req, res) {\n    fbinit.database().ref('/listings/id').once(\"value\", function(snapshot) {\n        idsnap = snapshot;\n  ls = [];\n    let cities = ['Manasquan','Wall','Avon-by-the-sea','Sea Girt','Belmar','Spring Lake','Spring Lake Heights','Brielle','Point Pleasant','Point Pleasant Beach','Bay Head','Bradley Beach','Ocean Grove','Neptune','West Belmar','Asbury Park'];\ncities.forEach(addr=>{\n    let filter = \"PropertyType Eq 'A' And MlsStatus Eq 'Active' And (City Eq '\"+addr+\"' Or StreetAddress Eq '\"+addr+\"')\";\n    console.log(filter);\n    let combo = [];\n    let obj = [];\n    let pageops = [];\n    let setargs = {\n        _filter: filter\n    };\n    let pagearr = [];\n\n    let opsurl = makeUrl(setargs, null, 'A', 'https://sparkapi.com/v1/listings?', 'Active');\n    let authops = {\n        headers: oauthHeaders(),\n        uri: opsurl + '&_pagination=count&_page=1',\n        json: true\n    };\n    console.log('about to request...' + JSON.stringify(authops));\n    rp(authops)\n        .then(pb => {\n            // results.concat(pb['D']['Results']);\n            console.log('pagei:' + JSON.stringify(pb['D']['Pagination']));\n\n            let pages = pb['D']['Pagination']['TotalPages'];\n            let currentpage = pb['D']['Pagination']['CurrentPage'];\n            pagearr.push({headers: oauthHeaders(), uri: opsurl + '&_pagination=1&_page='+pages, json: true});\n\n            for (let page = 1; page < pages; page++) {\n                let pageReq = {};\n                let newops = {headers: oauthHeaders(), uri: opsurl + '&_pagination=1&_page=' + page, json: true};\n                pagearr.push(newops)\n\n            }\n\n            let promisedPages = pagearr.map(ops => {\n                console.log('mapping ops :'+JSON.stringify(ops));\n\n                return requestWithPageOps(ops)\n            });\n            Promise.all(promisedPages)\n                .then(pb=>{\n                    promiseSaveListings(pb)\n                })\n        })\n                .catch(errors.StatusCodeError, function (reason) {\n                    // The server responded with a status codes other than 2xx.\n                    // Check\n                    if (reason.statusCode == 401) {\n                        console.log('refreshing got code: '+reason.statusCode);\n                        refreshAuth(oauthData)\n                    }\n                })\n                // .catch(this.checkStatus)\n                .catch(errors.RequestError, function (reason) {\n                    // reason.cause is the Error object Request would pass into a callback.\n                    console.log(reason.cause)\n                })\n                .catch(e => {\n                    // reason.cause is the Error object Request would pass into a callback.\n                    console.log('e:' + e)\n                })\n          .catch(errors.StatusCodeError, function (reason) {\n        // The server responded with a status codes other than 2xx.\n        // Check\n        if (reason.statusCode == 401) {\n            console.log(reason);\n            refreshAuth(oauthData)\n        }\n    })\n    // .catch(this.checkStatus)\n        .catch(errors.RequestError, function (reason) {\n            // reason.cause is the Error object Request would pass into a callback.\n            console.log(reason.cause)\n        })\n        .catch(e => {\n            // reason.cause is the Error object Request would pass into a callback.\n            console.log('e:' + e)\n        })});\n    res.render('pages/spark', {results:Object.keys(ls).map(key=>{\n        return key = f[key];})\n})}, function (errorObject) {\n        console.log(\"The read failed: \" + errorObject.code);\n    });\n    });\napp.get('/callback', function (req, res) {\n    let code = '';\n    let hascode = false;\n    let agentId = '';\n    if (req.query['openid.spark.code']) {\n        code = req.query['openid.spark.code'];\n        hascode=true;\n    }\n    if (req.query['openid_spark_code']) {\n        code = req.query['openid_spark_code'];\n        hascode=true;\n    }\n    if (req.query['code']){\n        code = req.query['code'];\n        hascode=true;\n    }\n\n    if (req.query['openid.spark.state']) {\n        agentId = req.query['openid.spark.state']\n    }\n    if(req.query['state']) {\n        agentId = req.query['state']\n    }\n    if(hascode==true){\n        fbinit.database().ref('/sparkauth/oauth').update({code:code}).then(function () {\n            console.log('updated code :'+code);\n        })\n    }\n    else {\n        console.log('did not update code : '+code+' hascode set to :'+hascode?'true':'false')\n    }\n    // console.log(req.query['openid.spark.code'] + ' : from callback');\n    let options;\n    fbinit.database().ref('/sparkauth/oauth').once(\"value\", function(snapshot) {\n        options = {\n            method: 'POST',\n            uri: 'https://sparkapi.com/v1/oauth2/grant',\n            headers: {\n                'X-SparkApi-User-Agent': 'Idx Agent',\n                'Content-Type': 'application/json'\n            },\n            body:{\n                client_id: snapshot.val().client_id,\n                client_secret: snapshot.val().client_secret,\n                grant_type: 'authorization_code',\n                code: code,\n                redirect_uri: snapshot.val().redirect_uri\n            },\n            json:true\n        };\n        console.log('using options :'+JSON.stringify(options));\n        oauthData.client_id= snapshot.val().client_id;\n        oauthData.client_secret= snapshot.val().client_secret;\n        oauthData.access_token= snapshot.val().access_token;\n        oauthData.refresh_token= snapshot.val().refresh_token;\n        oauthData.redirect_uri= snapshot.val().redirect_uri;\n        oauthData.expires_at= snapshot.val().expires_at?snapshot.val().expires_at:\"0\";\n        oauthData.code = snapshot.val().code\n\n    }, function (errorObject) {\n        console.log(\"The read failed: \" + errorObject.code);\n    }).then(function () {\n    rp(options)\n        .then(pb=>{\n            saveOauthData(pb);\n            res.render('pages/spark', {results:Object.keys(pb).map(key=> key = pb[key])});\n            // res.send('<strong>zip codes</strong><br><a href=\"/zip/07717\"><br/><strong>zip 07717</strong><br><a href=\"/zip/08736\"><strong>zip 08736</strong><br/><br/><strong>Log in</strong> with Spark</a>' +\n            //     '<a href=\"https://sparkplatform.com/oauth2?response_type=code&client_id='+oauthData.client_id+'&redirect_uri='+oauthData.redirect_uri+'\">Agent <strong>login</strong></a>');\n        })\n        .catch(function(err) {\n            res.send(err + 'oops');\n            console.log(err + 'uhoh');\n            console.log('request failed', err)})\n    });\n});\n\napp.get('/auth', (req, res) => {\n    var uri = \"https://sparkplatform.com/openid?openid.mode=checkid_setup&openid.return_to=\"+oauthData.redirect_uri+\"&openid.spark.client_id=\"+oauthData.client_id+\"&openid.spark.combined_flow=true\";\n    res.location(uri);\n    res.send('<a href=\"https://sparkplatform.com/openid?openid.mode=checkid_setup&openid.return_to='+oauthData.redirect_uri+'&openid.spark.client_id='+oauthData.client_id+'&openid.spark.combined_flow=true\">auth</a>')\n\n});\n\n"]}