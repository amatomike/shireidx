{"version":3,"sources":["../../src/index.js"],"names":["app","listingObj","BathsTotal","BedsTotal","City","Id","Latitude","ListPrice","ListingId","Longitude","MlsId","MlsStatus","PhotoCaption","PhotoLarge","PhotoThumb","Photos","Caption","Uri300","UriLarge","UriThumb","PostalCode","PropertySubType","PropertyType","PublicRemarks","StreetName","StreetNumber","StreetSuffix","YearBuilt","completed","geo","set","process","env","PORT","use","static","__dirname","get","request","response","render","listen","console","log","Promise","require","size","promisify","fbinit","initializeApp","serviceAccount","databaseURL","oauthData","client_id","client_secret","access_token","refresh_token","redirect_uri","expires_at","code","dB","database","ref","on","snapshot","val","JSON","stringify","errorObject","checkStatus","statusCode","refreshAuth","error","Error","statusText","saveOauthData","od","update","handleCallback","req","res","oauthHeaders","requestWithPageOps","ops","resolve","reject","then","pb","catch","e","promiseSaveListings","listings","updates","obj","allupdates","forEach","parr","ResourceUri","Name","Uri640","Uri800","Uri1024","Uri1280","Uri1600","Uri2048","Primary","sf","Object","assign","listing","primaryphotos","keys","includes","photoentry","uplist","Zip","StreetAddress","Price","Beds","Baths","Sqft","LotSizeArea","Photo300","url","key","entry","listingkey","push","idpath","citypath","zippath","streetpath","streetnumpath","paths","err","dimensions","length","removeall","remit","remove","getPage","setTimeout","getListings","filter","addr","combo","pageops","setargs","_filter","opsurl","makeUrl","authops","headers","uri","json","pages","currentpage","pagearr","page","pageReq","newops","promisedPages","map","all","StatusCodeError","reason","RequestError","cause","args","zipcode","proptype","base","status","argfilter","andT","zipfilter","andZ","proptypefilter","andP","statusFilter","formatargs","_orderby","_limit","_select","arr","argEntry","join","promiseTo","doThis","oa","rauth","method","body","send","params","thefilter","hascode","agentId","query","options","once","grant_type","results","location"],"mappings":"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","file":"index.js","sourcesContent":["import express from \"express\";\nimport fb from 'firebase'\nimport rp from 'request-promise';\nlet app = express();\nlet listingObj = {BathsTotal:null,BedsTotal:null,City:null,Id:null,Latitude:null,ListPrice:null,ListingId:null,Longitude:null,MlsId:null,MlsStatus:null,PhotoCaption:'Loading',PhotoLarge:'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire320x220.png',PhotoThumb:'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire110x75.png',Photos:[{Caption:'Loading',Uri300:'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire110x75.png',UriLarge:'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire110x75.png',UriThumb:'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire110x75.png'}],PostalCode:null,PropertySubType:null,PropertyType:null,PublicRemarks:'Loading',StreetName:null,StreetNumber:null,StreetSuffix:null,YearBuilt:null,completed:null,geo:{}};\n\napp.set('port', (process.env.PORT || 5000));\n\napp.use(express.static(__dirname + '/public'));\n\n// views is directory for all template files\napp.set('views', __dirname + '/views');\napp.set('view engine', 'ejs');\n\napp.get('/', function(request, response) {\n    response.render('pages/index');\n});\n\napp.listen(app.get('port'), function() {\n    console.log('Node app is running on port', app.get('port'));\n});\n\n//import path from 'path';\n\n//let server = require('https').Server(app);\nconst Promise = require('bluebird'),\n    size = Promise.promisify(require('request-image-size'));\nimport {\n    encode,\n    decode,\n    encodeComponents,\n    decodeComponents,\n} from 'firebase-encode';\nimport fetch from 'node-fetch'\nimport errors from 'request-promise/errors';\nlet fbinit = fb.initializeApp({\n    serviceAccount: {\n        \"type\": \"service_account\",\n        \"project_id\": \"sparkidxapi\",\n        \"private_key_id\": \"81085b6ba0707d1c02831f6b4b0b03a389f134dc\",\n        \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDgM1W+jsFYFGca\\n7TbB6mquembWVNI5BHXR0rO9ApMmLzfvW435Fh3ONjVFf1xkHOk8LpFpSKtzlKow\\ndxqZmeAJCRGRmqA0Tu3KGy2BvWmzkU+COezS8oLEcgSW7OJUsToxLwp3nvjKSBF8\\n50Vzsvu3WvlUzEmUkEB6InKBvgfhXAAi/YTRW6yhsIE+SZZ5lkhmEPaNALqWtJCx\\ni5Qw07Oz7OgeM0duJFMX3vL++y+SWkS5RM1u2KSrmQFPxD5tefutyIGM8JNeHABY\\n0FV5OtYulL8rspo6fqtI9kOuLXaNPYfWi7My4LsEbdX62iw2qOzdz62LIp5Op2gD\\nEFbJfmQxAgMBAAECggEBAJZQdKVtCp3mF/aKohLC+sF+GSKL/eHyZpfFv3HynvuT\\n3tmgtYAR3uvZlj/BEw2gAJOz2RQQf7rfKneR8wiWjQkhxmCrnctUO8MsE4ePmaWl\\nv/vcoDYSF7BjjUYvDdOgexZspoTq1XyxcuAeIodesbsNyGqdCJwNVt1L6R+pa5kg\\nF0eMozszPQXGeMfDFpjhpwXBcq67bFXdk4SqlvDeNSHxjWfl7/Hr0Kr8v0JnoJcw\\nuPxwLi6mvHVpYSVqpseQkr8aZ6xypT1+2ztkivMmqooRXFUaclxxIO2K1xCmncQg\\neGabGBOPzw2Zh/UnCnDfDYeaZ5k4pKNqfjBQM6o3il0CgYEA8iVXXfMjCVcdC/xq\\nrOAPir6jXy4u3f2ZSxMmDHgG6IFCxCPwhvjCE3Uv84Wnr6HZ114gSMGFIq9ZS22U\\nt7Uejq7UELVVn4pDAzPhdlJU9mBwTBcdoB1bJx1KtfCt8b9+M30H5JaMPJ+x22Z7\\nyWxhwMPu0N3TGuy2Z8Ue0zKvsLMCgYEA7Qcm8sm+uliCcS7ypNmbn2nRiEp9yFan\\nGZUb4flKO6xHJ/vBj60UEYKYkL63syXDdQ6yAV8jZlJHxVGIT7yJ0AhVkNo/oK4f\\nPNXiO4dw+N8ReJhcjwKmU0dOMK4rzH9QGma4WaIO1NXXhap2PbBlF/Yy4IlBnNHW\\n+7Faf1zUQYsCgYEAsHTBu/cIWzAePLPO0Pfem47c4ul2wdKiOPFVUtTMw/YeP2yp\\nRNJWK3PEY8PMNNLPOoCfKiXL7UC2456RN2ZHRFbmtt5N7RsGRnkyHdVVkM0qSGi3\\n8Aw0dsaDwR4IxBh10POWIuAKhcsiAu4l2tyeR6kAiTh9NCu3qNse4W0YVr0CgYBt\\njqS+C+oQj+CbGCwnbj20TWEAMg45j3PlKzqcFHHvaw3ouUEae9GO1mJWZRDbyVSy\\nwnwcjjD6loV9+tWapXa9pVyHe5l1V4YwxFuxUEUzg0e8ChCeOYdPbuIBNkAgYahQ\\ny7HiHDnmvoDD06qbkPDpRm71wfuF1Kgd5jgCLpIdSQKBgQCezHrV+ZHOvoxljR+x\\n3/kpwfHyWrqIbETvUz2TbjMc52igcdr09hbsp4mNTl0uy6kMk1MMHVCKNgWdS48x\\n6crGgSU/sIugJ9U3Ph7SWEf4wjPYgFRbB8dcbK/+M7SvCJ2/NR8UZKWXxa5TpO4+\\n2ElOQBtoUlLTnACetImf5YcchA==\\n-----END PRIVATE KEY-----\\n\",\n        \"client_email\": \"apiauth@sparkidxapi.iam.gserviceaccount.com\",\n        \"client_id\": \"113743275477969379982\",\n        \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n        \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n        \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n        \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/apiauth%40sparkidxapi.iam.gserviceaccount.com\"\n    },\n    databaseURL: \"https://sparkidxapi.firebaseio.com\"\n});\n\nlet oauthData = {\n    client_id: ' ',\n    client_secret: '',\n    access_token: '',\n    refresh_token: '',\n    redirect_uri: '',\n    expires_at: '',\n    code:''\n}\nlet dB = fbinit.database();\nfbinit.database().ref('/sparkauth/oauth').on(\"value\", function(snapshot) {\n    oauthData.client_id= snapshot.val().client_id\n    oauthData.client_secret= snapshot.val().client_secret\n    oauthData.access_token= snapshot.val().access_token\n    oauthData.refresh_token= snapshot.val().refresh_token\n    oauthData.redirect_uri= snapshot.val().redirect_uri\n    oauthData.expires_at= snapshot.val().expires_at?snapshot.val().expires_at:\"0\"\n    oauthData.code = snapshot.val().code\n    console.log(\"auth updated!\"+JSON.stringify(oauthData));\n\n}, function (errorObject) {\n    console.log(\"The read failed: \" + errorObject.code);\n});\n\nfunction checkStatus(response){\n    if (response.statusCode == 401) {\n        console.log('response = 401 ? '+response.statusCode)\n        // let oauthData = Object.assign({},oauthData)\n        // let fBdB = this.fBdB\n        return refreshAuth(oauthData);\n    }\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n        return response\n    } else {\n        let error = new Error(response.statusText)\n        error.response = response\n        console.log('got error while checking status '+error);\n    }\n}\nfunction saveOauthData(od) {\n    console.log(\"saving OauthData ->\"+od);\n    return dB.ref('/sparkauth/oauth').update(od)\n}\nfunction handleCallback(req, res) {\n\n}\n//https://searchidx.herokuapp.com/callback?openid.assoc_handle=%7BHMAC-SHA1%7D%7B58574516%7D%7B6I%2BC%2Bg%3D%3D%7D&openid.claimed_id=https%3A%2F%2Fsparkplatform.com%2Fopenid%2Fuserid%2Fmo.1524%3Fsession_id%3D6e338a49c2eef5f2d4e36270c0647de5&openid.identity=https%3A%2F%2Fsparkplatform.com%2Fopenid%2Fuserid%2Fmo.1524%3Fsession_id%3D6e338a49c2eef5f2d4e36270c0647de5&openid.mode=id_res&openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0&openid.ns.spark=http%3A%2F%2Fsparkplatform.com%2Fextensions%2Fspark%2F1.0&openid.ns.sreg=http%3A%2F%2Fopenid.net%2Fextensions%2Fsreg%2F1.1&openid.op_endpoint=https%3A%2F%2Fsparkplatform.com%2Fopenid%3Fsession_id%3D6e338a49c2eef5f2d4e36270c0647de5&openid.response_nonce=2016-12-19T02%3A25%3A26ZV3Hhkt&openid.return_to=https%3A%2F%2Fsearchidx.herokuapp.com%2Fcallback&openid.sig=e582hxh5GzHutv0z%2FMIayGji6cw%3D&openid.signed=assoc_handle%2Cclaimed_id%2Cidentity%2Cmode%2Cns%2Cns.spark%2Cns.sreg%2Cop_endpoint%2Cresponse_nonce%2Creturn_to%2Csigned%2Cspark.code%2Csreg.fullname%2Csreg.nickname&openid.spark.code=6tbc7lcwmiedsbwrlnpokkrdb&openid.sreg.fullname=Paul+Amato&openid.sreg.nickname=20140811174925623895000000\nfunction oauthHeaders(){\n    return {\n        'X-SparkApi-User-Agent': 'DevApp',\n        'Authorization': 'OAuth '+oauthData.access_token,\n        'Content-Type': 'application/json'\n    };\n}\nfunction requestWithPageOps(ops){\n        return new Promise(function(resolve, reject) {\n            rp(ops)\n                .then(pb=>{\n                resolve(pb['D']['Results']);\n                })\n                .catch(e=>{\n                reject(Error('listings didnt load' + e));\n                })\n            })\n}\nfunction promiseSaveListings(listings){\n\n    let updates = {}\n    let obj = []\n    return new Promise(function(resolve, reject) {\n        let allupdates=[];\n        listings.forEach(listing=> {\n            let parr = [\n                {\n                    ResourceUri: \"unset\",\n                    Id: \"0\",\n                    Name: \"PlaceHolder\",\n                    Caption: \"PlaceHolder\",\n                    UriThumb: \"https://searchidx.herokuapp.com/placeholders/shireThumb.png\",\n                    Uri300: \"https://searchidx.herokuapp.com/placeholders/shire300.png\",\n                    Uri640: \"https://searchidx.herokuapp.com/placeholders/shire640.png\",\n                    Uri800: \"https://searchidx.herokuapp.com/placeholders/shire800.png\",\n                    Uri1024: \"https://searchidx.herokuapp.com/placeholders/shire1024.png\",\n                    Uri1280: \"https://searchidx.herokuapp.com/placeholders/shire1280.png\",\n                    Uri1600: \"https://searchidx.herokuapp.com/placeholders/shire1600.png\",\n                    Uri2048: \"https://searchidx.herokuapp.com/placeholders/shire2048.png\",\n                    UriLarge: \"https://searchidx.herokuapp.com/placeholders/shire1024.png\",\n                    Primary: true\n                }\n            ];\n            let sf = Object.assign({},listing['StandardFields']);\n            let primaryphotos = parr[0];\n            if(Object.keys(listing['StandardFields']).includes('Photos')){\n            primaryphotos = Object.assign(primaryphotos,sf['Photos'][0])}\n            let photoentry = Object.assign(parr[0],primaryphotos)\n            let uplist = {\n                Id:listing.Id,\n                City:sf.City,\n                Zip:sf.PostalCode,\n                StreetAddress:sf.StreetNumber+' '+sf.StreetName+' '+sf.StreetSuffix,\n                Price:sf.ListPrice,\n                Beds:sf.BedsTotal,\n                Baths:sf.BathsTotal,\n                Sqft:sf.LotSizeArea,\n                Photo300:{url:photoentry.Uri300,size:null,key:'Photo300'},\n                PhotoLarge:{url:photoentry.UriLarge,size:null,key:'PhotoLarge'},\n                PhotoThumb:{url:photoentry.UriThumb},\n                PhotoCaption:photoentry.Caption\n            }\n            let entry = {}\n            let listingkey = dB.ref('/listings/keys/').push(Object.assign(uplist,sf));\n            uplist['key']=listingkey;\n            let idpath = \"/listings/id/\" + uplist['Id']\n            let citypath = \"/listings/location/city/\" + uplist['City'];\n            let zippath = \"/listings/location/zip/\" + uplist['PostalCode'];\n            let streetpath = encode(\"/listings/location/street/name/\" + uplist['StreetName']);\n            let streetnumpath = encode(\"/listings/location/street/number/\" + uplist['StreetNumber']);\n            let paths = {idpath:encode(idpath),citypath:encode(citypath),zippath:encode(zippath),streetpath:encode(streetpath),streetnumpath:encode(streetnumpath)}\n            entry[idpath]=uplist;\n            entry[citypath]=uplist;\n            entry[zippath]=uplist;\n            entry[streetpath]=uplist;\n            entry[streetnumpath]=uplist;\n            dB.ref('/').update(entry);\n            size({url: uplist.PhotoLarge.url},function (err, dimensions, length) {\n                uplist.PhotoLarge.size = dimensions;\n                entry[idpath] = uplist;\n                entry[citypath] = uplist;\n                entry[zippath] = uplist;\n                entry[streetpath] = uplist;\n                entry[streetnumpath] = uplist;\n                // })\n                // size({url: uplist.Photo300.url},function (err, dimensions, length) {\n                //     uplist.Photo300.size = dimensions;\n                //     entry[idpath]=uplist;\n                //     entry[citypath]=uplist;\n                //     entry[zippath]=uplist;\n                //     entry[streetpath]=uplist;\n                //     entry[streetnumpath]=uplist;\n                //     })\n            })\n                .then(en=>{\n        resolve(listings)})})\n    })}\nfunction removeall(){\n    let remit = dB.ref('/listings').remove().then(function () {\n        return \"done clearing\";\n    })}\nfunction getPage(ops){\n    console.log('getting with ops:'+JSON.stringify(ops))\n    return new Promise(function(resolve, reject) {\n        setTimeout(() => resolve(ops), 250000 );})//250  seconds\n        .catch((err) => console.log(\"error: \"+JSON.stringify(ops), err));\n}\nfunction getListings(req,res, filter,addr) {\n    let combo = [];\n    let obj = []\n    let pageops = [];\n    let setargs = {\n        _filter: filter\n    };\n    let opsurl = makeUrl(setargs, null, 'A', 'https://sparkapi.com/v1/listings?', 'Active');\n    let authops = {\n        headers: oauthHeaders(),\n        uri: opsurl + '&_pagination=count&_page=1',\n        json: true\n    };\n    console.log('about to request...' + JSON.stringify(authops))\n    rp(authops)\n        .then(pb => {\n            // results.concat(pb['D']['Results']);\n            console.log('pagei:' + JSON.stringify(pb['D']['Pagination']))\n\n            let pages = pb['D']['Pagination']['TotalPages'];\n            let currentpage = pb['D']['Pagination']['CurrentPage'];\n            let pagearr = []\n            if (currentpage < pages) {\n\n                for (let page = 1; page < pages; page++) {\n                    let pageReq = {};\n                    let newops = {headers: oauthHeaders(), uri: opsurl + '&_pagination=1&_page=' + page, json: true};\n                    pagearr.push(newops)\n\n                }\n            } else {\n                let newops = {headers: oauthHeaders(), uri: opsurl + '&_pagination=1&_page=1', json: true};\n                pagearr.push(newops)\n            }\n            let promisedPages = pagearr.map(ops => {\n                console.log('mapping ops :'+JSON.stringify(ops));\n\n                requestWithPageOps(ops).then(listings=>{\n                    console.log('made req .. now save (length is):'+listings.length);\n                    return promiseSaveListings(listings)})\n\n            })\n            Promise.all(promisedPages)\n                .then(listings => {\n                    console.log('promise all ... '+listings.length);\n                })\n                .catch(errors.StatusCodeError, function (reason) {\n                    // The server responded with a status codes other than 2xx.\n                    // Check\n                    if (reason.statusCode == 401) {\n                        console.log(reason)\n                        refreshAuth(oauthData)\n                    }\n                })\n                // .catch(this.checkStatus)\n                .catch(errors.RequestError, function (reason) {\n                    // reason.cause is the Error object Request would pass into a callback.\n                    console.log(reason.cause)\n                })\n                .catch(e => {\n                    // reason.cause is the Error object Request would pass into a callback.\n                    console.log('e:' + e)\n                })\n            console.log('going!')\n\n        }).catch(errors.StatusCodeError, function (reason) {\n        // The server responded with a status codes other than 2xx.\n        // Check\n        if (reason.statusCode == 401) {\n            console.log(reason)\n            refreshAuth(oauthData)\n        }\n    })\n    // .catch(this.checkStatus)\n        .catch(errors.RequestError, function (reason) {\n            // reason.cause is the Error object Request would pass into a callback.\n            console.log(reason.cause)\n        })\n        .catch(e => {\n            // reason.cause is the Error object Request would pass into a callback.\n            console.log('e:' + e)\n        })\n}\nfunction makeUrl(args,zipcode=null,proptype=null,base='https://sparkapi.com/v1/listings?',status=null){\n    let argfilter = args['_filter']?args['_filter']:''\n    let andT = args['_filter']?' And ':''\n    let zipfilter = zipcode?argfilter+andT+`\" PostalCode Eq '${zipcode}'`:argfilter\n    let andZ = zipcode?andT:''\n    let proptypefilter = proptype?zipfilter+andZ+\" PropertyType Eq '\"+proptype+\"'\":zipfilter\n    let andP = zipcode?andT:''\n    let statusFilter = status?proptypefilter+andP+\" MlsStatus Eq '\"+status+\"'\":proptypefilter\n    // let limit = args['_select']?25:25\n    let formatargs = {\n        // _pagination:'1',\n        _orderby:   'City',\n        _filter:    args['_filter'],\n        _limit:     50,\n        // _page:      1,\n        _select:    'Photos.Uri640,Photos.Uri800,Photos.Uri1024,Photos.Uri1280,Photos.Uri1600,Photos.Uri2048,Photos.UriThumb,Photos.UriLarge,Photos.Uri300,Photos.Caption,PrimaryPhoto,StreetNumber,StreetName,StreetSuffix,PostalCode,ListPrice,City,BedsTotal,BathsTotal,PublicRemarks,PropertyType,MlsStatus,Latitude,ListingId,Longitude,PostalCode,PropertySubType,YearBuilt,LivingArea,HighSchool,MiddleOrJuniorSchool,ElementarySchool,SubdivisionName,BuildingAreaTotal,PropertySubType,UnparsedAddress,LotSizeArea,LotSizeAcres,CustomFields',\n    }\n    // formatargs['_page'] = args['_page']?args['_page']:1\n    // formatargs['_select'] = select\n    args = Object.assign({},formatargs)\n    let arr = Object.keys(args).map(key=>{\n        let argEntry = formatargs[key]?formatargs[key]:args[key]\n        let entry = key+\"=\"+argEntry\n        return entry\n    })\n    return base+arr.join('&')\n}\nfunction promiseTo(doThis) {\n    console.log('promised to do something ...')\n    return new Promise(function(resolve, reject) {\n        setTimeout(() => resolve(doThis), 1*doThis);})\n}\nfunction refreshAuth(oa) {\n    let headers = {\n        'X-SparkApi-User-Agent': 'IDX Agent',\n        'Content-Type': 'application/json'\n    };\n    let rauth = {\n        url:'https://sparkapi.com/v1/oauth2/grant',\n        method:'POST',\n        headers: headers,\n        body: oa,\n        json: true\n    };\n\n    rauth.body['grant_type']=\"refresh_token\";\n    console.log('refreshing with :'+JSON.stringify(rauth))\n\n        rp(rauth, function (err, res, body) {\n    }).then(pb=>{        saveOauthData(pb);\n    })\n        .catch(errors.StatusCodeError, function (reason) {\n            console.log('Reason:'+reason+'          #####################   Status Code : '+reason.statusCode)})\n        .catch(errors.RequestError, function (reason) {console.log(reason)})\n\n}\napp.get('/remove', function (req, res) {\n    removeall();\n    res.send('cleared ')\n})\napp.get('/addr/:addr', function (req, res) {\n    let addr = req.params.addr;\n\n    let thefilter = \"PropertyType Eq 'A' And MlsStatus Eq 'Active' And (City Eq '\"+addr+\"' Or StreetAddress Eq '\"+addr+\"')\"\n    console.log(thefilter);\n    getListings(req,res,thefilter,addr)\n})\napp.get('/callback', function (req, res) {\n    let code = ''\n    let hascode = false;\n    let agentId = '';\n    if (req.query['openid.spark.code']) {\n        code = req.query['openid.spark.code'];\n        hascode=true;\n    }\n    if (req.query['openid_spark_code']) {\n        code = req.query['openid_spark_code'];\n        hascode=true;\n    }\n    if (req.query['code']){\n        code = req.query['code'];\n        hascode=true;\n    }\n\n    if (req.query['openid.spark.state']) {\n        agentId = req.query['openid.spark.state']\n    }\n    if(req.query['state']) {\n        agentId = req.query['state']\n    }\n    if(hascode==true){\n        fbinit.database().ref('/sparkauth/oauth').update({code:code}).then(function () {\n            console.log('updated code :'+code);\n        })\n    }\n    else {\n        console.log('did not update code : '+code+' hascode set to :'+hascode?'true':'false')\n    }\n    // console.log(req.query['openid.spark.code'] + ' : from callback');\n    let options;\n    fbinit.database().ref('/sparkauth/oauth').once(\"value\", function(snapshot) {\n        options = {\n            method: 'POST',\n            uri: 'https://sparkapi.com/v1/oauth2/grant',\n            headers: {\n                'X-SparkApi-User-Agent': 'Idx Agent',\n                'Content-Type': 'application/json'\n            },\n            body:{\n                client_id: snapshot.val().client_id,\n                client_secret: snapshot.val().client_secret,\n                grant_type: 'authorization_code',\n                code: code,\n                redirect_uri: snapshot.val().redirect_uri\n            },\n            json:true\n        };\n        console.log('using options :'+JSON.stringify(options))\n        oauthData.client_id= snapshot.val().client_id\n        oauthData.client_secret= snapshot.val().client_secret\n        oauthData.access_token= snapshot.val().access_token\n        oauthData.refresh_token= snapshot.val().refresh_token\n        oauthData.redirect_uri= snapshot.val().redirect_uri\n        oauthData.expires_at= snapshot.val().expires_at?snapshot.val().expires_at:\"0\"\n        oauthData.code = snapshot.val().code\n\n    }, function (errorObject) {\n        console.log(\"The read failed: \" + errorObject.code);\n    }).then(function () {\n    rp(options)\n        .then(pb=>{\n            saveOauthData(pb)\n            res.render('pages/spark', {results:Object.keys(pb).map(key=> key = pb[key])});\n            // res.send('<strong>zip codes</strong><br><a href=\"/zip/07717\"><br/><strong>zip 07717</strong><br><a href=\"/zip/08736\"><strong>zip 08736</strong><br/><br/><strong>Log in</strong> with Spark</a>' +\n            //     '<a href=\"https://sparkplatform.com/oauth2?response_type=code&client_id='+oauthData.client_id+'&redirect_uri='+oauthData.redirect_uri+'\">Agent <strong>login</strong></a>');\n        })\n        .catch(function(err) {\n            res.send(err + 'oops');\n            console.log(err + 'uhoh');\n            console.log('request failed', err)})\n    });\n})\n\napp.get('/auth', (req, res) => {\n    var uri = \"https://sparkplatform.com/openid?openid.mode=checkid_setup&openid.return_to=\"+oauthData.redirect_uri+\"&openid.spark.client_id=\"+oauthData.client_id+\"&openid.spark.combined_flow=true\";\n    res.location(uri);\n    res.send('<a href=\"https://sparkplatform.com/openid?openid.mode=checkid_setup&openid.return_to='+oauthData.redirect_uri+'&openid.spark.client_id='+oauthData.client_id+'&openid.spark.combined_flow=true\">auth</a>')\n\n});\n\n"]}