{"version":3,"sources":["../../src/saveflat.js"],"names":["LOC","STATUS","INFO","FULL","SCHOOLS","ALL","IMAGES","prepKeys","keys","obj","forEach","old","Object","assign","key","safe","storeImagesUpdateUrls","photos","id","fbdb","SaveFlat","data","passfb","_flatmap","MlsStatus","ModificationTimestamp","ListingUpdateTimestamp","City","Latitude","Longitude","StreetName","StreetNumber","StreetSuffix","SubdivisionName","PostalCode","BathsTotal","BedsTotal","BuildingAreaTotal","ListPrice","ListingId","MlsId","PublicRemarks","Photos","Schools","_db","sf","StandardFields","streetnum","prepKey","schools","MiddleOrJuniorSchool","HighSchool","ElementarySchool","streetnum_safe","streetname","streetname_safe","streetAddress","city","zip","alldata","ref","push","Id","flat","flattenListing","cityKey","info","full","status","location","updates","update","fields","flatmap","PhotosKey","PhotoThumbsUrls","PhotoUrls","PhotoThumb","PhotoLarge","ElementrySchool","pAr","photoKey","pEntry","photolarge","photoThumb","map","f","field","v","pObj","photo","newKey","photoPush","e","console","log","done","category","catagory"],"mappings":"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","file":"saveflat.js","sourcesContent":["/**\n * Created by m on 11/23/16.\n */\nimport fb from 'firebase';\n// import api from 'sparkapiauth'\nimport {\n    encode,\n    decode,\n    encodeComponents,\n    decodeComponents,\n} from 'firebase-encode';\n\n// safe encodes to 02%2F10%2F2013%2E%24%5B%5D%23%2F%25234_-!@%23%24%25^&*()0%5D;:'\"`\\=%2F?+|.\n// const encoded = encode('02/10/2013.$[]#/%234_-!@#$%^&*()0];:\\'\"`\\\\=/?+|');\nconst LOC = 'Location'\nconst STATUS = 'Status'\nconst INFO = 'Info'\nconst FULL = 'Full'\nconst SCHOOLS = 'Schools'\nconst ALL = 'All'\nconst IMAGES = 'Images'\n\nfunction prepKeys(keys,obj) {\n\n    keys.forEach(key=>{\n        let old = Object.assign({},obj[key])\n        let safe = encode(old)\n        obj[key]=safe\n    })\n    return encode(key)\n}\nfunction storeImagesUpdateUrls(photos,key,id,fbdb){\n\n\n}\nexport default class SaveFlat {\n\n    constructor(data, passfb) {\n        this._flatmap = {\n            MlsStatus: STATUS,\n            ModificationTimestamp: STATUS,\n            ListingUpdateTimestamp: STATUS,\n            City: LOC,\n            Latitude: LOC,\n            Longitude: LOC,\n            StreetName: LOC,\n            StreetNumber: LOC,\n            StreetSuffix: LOC,\n            SubdivisionName: LOC,\n            PostalCode: LOC,\n            BathsTotal: INFO,\n            BedsTotal: INFO,\n            BuildingAreaTotal: INFO,\n            ListPrice: INFO,\n            ListingId: INFO,\n            MlsId: INFO,\n            PublicRemarks: INFO,\n            Photos:IMAGES,\n            Schools:SCHOOLS\n        }\n        this._db = passfb\n        var sf = Object.assign({},data.StandardFields)\n        var streetnum = prepKey(sf.StreetNumber);\n        var schools = {\n            MiddleOrJuniorSchool:sf['MiddleOrJuniorSchool'],\n            HighSchool:sf['HighSchool'],\n            ElementarySchool:sf['ElementarySchool']\n        }\n        var streetnum_safe = prepKey(streetnum);\n        // streetnum.replace(/\\.|\\$|\\#|\\[|\\/|\\]/g, '_');\n        var streetname = prepKey(sf.StreetName);\n        var streetname_safe = prepKey(streetname)\n        var streetAddress = streetnum+' '+streetname+' '+sf.City+' '+sf.PostalCode\n        var city = prepKey(sf.City)\n        var zip = prepKey(sf.PostalCode)\n        sf['City'] = city\n        sf['StreetName'] = streetname\n        sf['StreetNumber'] = streetname\n\n        data.StandardFields = ''\n        sf['StreetAddress'] = streetAddress\n        var alldata = Object.assign(data,sf)\n        let key = this._db.ref('/listings/keys/').push(data.Id).key\n        this.key = key\n        var flat = this.flattenListing(alldata,key,passfb)\n        var cityKey = this._db.ref\n        flat.info['key'] = this.key\n        flat.full['key'] = this.key\n        flat.status['key'] = this.key\n        flat.location['key'] = this.key\n        var updates = {};\n        updates['/listings/keys/' + this.key+'/'] = flat.info;\n        updates['/listings/location/city/' + flat.location.City + '/'+ this.key+''] = flat.info;\n        updates['/listings/location/zip/' + flat.location.PostalCode + '/listings/'+ this.key+''] = flat.info;\n        updates['/listings/status/' + flat.status.MlsStatus + '/' + this.key+''] = flat.info;\n        updates['/listings/location/streetname/' + streetname_safe + '/' + this.key+''] = flat.info;\n        updates['/listings/location/streetnumber/' + streetnum_safe + '/' + this.key+''] = flat.info;\n        // fbpromises.push(fbsdb.ref().update(updates));\n        updates['/listings/id/' + flat.Id] = this.key;\n        updates['/listings/full/' + this.key]=flat\n        updates['/listings/location/data/' + this.key] = flat.location\n        updates['/listings/status/data/' + this.key] = flat.status\n        updates['/listings/info/data/' + this.key] = flat.info\n        return this._db.ref().update(updates);\n    }\n    flattenListing(fields,key,fbdb){\n        var flatmap = {\n            MlsStatus: STATUS,\n            ModificationTimestamp: STATUS,\n            ListingUpdateTimestamp: STATUS,\n            City: LOC,\n            Latitude: LOC,\n            Longitude: LOC,\n            StreetName: LOC,\n            StreetNumber: LOC,\n            StreetSuffix: LOC,\n            SubdivisionName: LOC,\n            PostalCode: LOC,\n            BathsTotal: INFO,\n            BedsTotal: INFO,\n            BuildingAreaTotal: INFO,\n            ListPrice: INFO,\n            ListingId: INFO,\n            MlsId: INFO,\n            PublicRemarks: INFO,\n            Photos:IMAGES,\n            PhotosKey:INFO,\n            PhotoThumbsUrls:INFO,\n            PhotoUrls:INFO,\n            PhotoThumb:INFO,\n            PhotoLarge:INFO,\n            HighSchool:SCHOOLS,\n            ElementrySchool:SCHOOLS,\n            MiddleOrJuniorSchool:SCHOOLS\n        }\n        let flat = {}\n        let obj = {}\n        let pAr = []\n        obj[INFO] = {}\n        obj[STATUS] = {}\n        obj[FULL] = {}\n        obj[LOC] = {}\n        obj[SCHOOLS] = {}\n        obj[ALL] = {}\n        obj[IMAGES] = {}\n        function photoKey(pEntry) {\n            return fbdb.ref('/listings/photos/').push(pEntry).key\n        }\n\n        let photolarge = \"https://shire.mikeamato.org/wp-content/uploads/2016/11/shire110x75.png\"\n        let photoThumb = \"https://shire.mikeamato.org/wp-content/uploads/2016/11/shire110x75.png\"\n        fields['PhotoThumb'] = photoThumb\n        fields['PhotoLarge'] = photolarge\n        Object.keys(fields).map(field =>{\n            let  f = field\n            let  v = fields[field]\n            let flat = flatmap[f]\n            let pObj = {}\n            if(v !== \"********\"&&v !== null) {\n                switch(flat) {\n                    case STATUS:\n                        obj[STATUS][f]=v\n                        break\n                    case INFO:\n                        obj[INFO][f]=v\n                        break\n                    case LOC:\n                        obj[LOC][f]=v\n                        break\n                    case SCHOOLS:\n                        obj[LOC][f]=v\n                        break\n                    default:\n                        obj[FULL][f] = v\n                        break\n                }}})\n        obj['Photos'] = {}\n        obj['Images'] = {}\n        try{\n        if(fields['Photos']){\n            fields['Photos'].forEach(photo=> {\n\n                if (photo['Primary'] == true) {\n                    photolarge = photo['UriLarge']\n                    // console.log('Got Primary Photo for'+key)\n                    photoThumb = photo['UriThumb']\n\n                }//end if photo primary check\n                 let newKey = photoPush(photo)\n                obj['Images'][newKey]   =  {}\n                obj['Photos'][newKey]   =  photo\n\n            })//end forEachPhoto\n        }//endif key photo exists\n            }//end try\n        catch(e){\n                console.log(e)\n                }//end catch for try\n\n        let done = Object.keys(obj).forEach(category => {\n            flat[category] = {}\n            let catagory = Object.assign({},obj[category])\n            Object.assign(category, obj[category])\n            Object.assign(flat[FULL],category)\n            Object.assign(flat[ALL],category)\n            Object.assign(flat[category],obj[INFO])\n        })//end forEach catagory\n\n        console.log(flat['Images'])\n        Object.assign(flat[ALL],fields)\n        return Object.assign(flat,obj[INFO])\n    }\n}"]}