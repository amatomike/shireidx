{"version":3,"sources":["../../src/sparkapiauth.js"],"names":["Promise","require","size","promisify","auth","fbinit","initializeApp","serviceAccount","databaseURL","oauthData","client_id","client_secret","access_token","refresh_token","redirect_uri","expires_at","code","agentId","expires_in","results","dB","database","ref","on","snapshot","console","log","val","JSON","stringify","errorObject","getOauthData","saveOauthData","od","update","promiseToGet","ops","then","resolve","reject","setTimeout","thejson","catch","err","message","StatusCodeError","reason","RequestError","cause","e","promDate","some","SparkApiAuth","_reqargs","value","_tokens","_fBdB","tokens","_fbsdb","_args","_pagination","_page","_filter","_limit","_expand","newAToken","newRToken","newExpires","newAgentId","newcode","res","d","Date","setSeconds","getSeconds","expireson","fBdB","send","response","statusCode","rt","refreshAuth","error","Error","statusText","json","req","headers","Headers","options","url","method","body","grant_type","hascode","checkStatus","parseJSON","saveTokens","pb","query","listings","finishUpdate","uplst","ups","o","p","zippath","citypath","streetpath","streetnumpath","push","Object","assign","minipromise","prom","updates","obj","forEach","uplist","media","listing","StandardFields","Photos","UriThumb","UriLarge","Uri800","Uri300","Uri1024","Id","Caption","idpath","entry","entrygeo","paths","saving","keys","subkey","dimensions","length","key","width","end","filter","combo","addr","params","pageops","setargs","opsurl","makeUrl","authops","oauthHeaders","uri","fdB","tauth","pages","currentpage","pagearr","page","pageReq","newops","promisedPages","map","getPage","promiseSaveListings","all","set","args","zipcode","proptype","base","status","argfilter","select","andT","zipfilter","andZ","proptypefilter","andP","statusFilter","formatargs","_orderby","_select","arr","argEntry","join","doThis","at","zip","promiseTo","createFetchPromise","thisauth","state","fbd","fetcharr","countArgs","countOps","setupOptions","listId","D","Pagination","TotalPages","newarg","qs","detailsArr","promises","data","remit","remove"],"mappings":"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","file":"sparkapiauth.js","sourcesContent":["\nimport fb from 'firebase'\nimport Request from 'request'\nimport rp from 'request-promise';\nconst Promise = require('bluebird'),\n    size = Promise.promisify(require('request-image-size'));\nimport {\n    encode,\n    decode,\n    encodeComponents,\n    decodeComponents,\n} from 'firebase-encode';\nimport fetch from 'node-fetch'\n import errors from 'request-promise/errors';\nvar auth;\nvar fbinit = fb.initializeApp({\n    serviceAccount: {\n        \"type\": \"service_account\",\n        \"project_id\": \"sparkidxapi\",\n        \"private_key_id\": \"81085b6ba0707d1c02831f6b4b0b03a389f134dc\",\n        \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDgM1W+jsFYFGca\\n7TbB6mquembWVNI5BHXR0rO9ApMmLzfvW435Fh3ONjVFf1xkHOk8LpFpSKtzlKow\\ndxqZmeAJCRGRmqA0Tu3KGy2BvWmzkU+COezS8oLEcgSW7OJUsToxLwp3nvjKSBF8\\n50Vzsvu3WvlUzEmUkEB6InKBvgfhXAAi/YTRW6yhsIE+SZZ5lkhmEPaNALqWtJCx\\ni5Qw07Oz7OgeM0duJFMX3vL++y+SWkS5RM1u2KSrmQFPxD5tefutyIGM8JNeHABY\\n0FV5OtYulL8rspo6fqtI9kOuLXaNPYfWi7My4LsEbdX62iw2qOzdz62LIp5Op2gD\\nEFbJfmQxAgMBAAECggEBAJZQdKVtCp3mF/aKohLC+sF+GSKL/eHyZpfFv3HynvuT\\n3tmgtYAR3uvZlj/BEw2gAJOz2RQQf7rfKneR8wiWjQkhxmCrnctUO8MsE4ePmaWl\\nv/vcoDYSF7BjjUYvDdOgexZspoTq1XyxcuAeIodesbsNyGqdCJwNVt1L6R+pa5kg\\nF0eMozszPQXGeMfDFpjhpwXBcq67bFXdk4SqlvDeNSHxjWfl7/Hr0Kr8v0JnoJcw\\nuPxwLi6mvHVpYSVqpseQkr8aZ6xypT1+2ztkivMmqooRXFUaclxxIO2K1xCmncQg\\neGabGBOPzw2Zh/UnCnDfDYeaZ5k4pKNqfjBQM6o3il0CgYEA8iVXXfMjCVcdC/xq\\nrOAPir6jXy4u3f2ZSxMmDHgG6IFCxCPwhvjCE3Uv84Wnr6HZ114gSMGFIq9ZS22U\\nt7Uejq7UELVVn4pDAzPhdlJU9mBwTBcdoB1bJx1KtfCt8b9+M30H5JaMPJ+x22Z7\\nyWxhwMPu0N3TGuy2Z8Ue0zKvsLMCgYEA7Qcm8sm+uliCcS7ypNmbn2nRiEp9yFan\\nGZUb4flKO6xHJ/vBj60UEYKYkL63syXDdQ6yAV8jZlJHxVGIT7yJ0AhVkNo/oK4f\\nPNXiO4dw+N8ReJhcjwKmU0dOMK4rzH9QGma4WaIO1NXXhap2PbBlF/Yy4IlBnNHW\\n+7Faf1zUQYsCgYEAsHTBu/cIWzAePLPO0Pfem47c4ul2wdKiOPFVUtTMw/YeP2yp\\nRNJWK3PEY8PMNNLPOoCfKiXL7UC2456RN2ZHRFbmtt5N7RsGRnkyHdVVkM0qSGi3\\n8Aw0dsaDwR4IxBh10POWIuAKhcsiAu4l2tyeR6kAiTh9NCu3qNse4W0YVr0CgYBt\\njqS+C+oQj+CbGCwnbj20TWEAMg45j3PlKzqcFHHvaw3ouUEae9GO1mJWZRDbyVSy\\nwnwcjjD6loV9+tWapXa9pVyHe5l1V4YwxFuxUEUzg0e8ChCeOYdPbuIBNkAgYahQ\\ny7HiHDnmvoDD06qbkPDpRm71wfuF1Kgd5jgCLpIdSQKBgQCezHrV+ZHOvoxljR+x\\n3/kpwfHyWrqIbETvUz2TbjMc52igcdr09hbsp4mNTl0uy6kMk1MMHVCKNgWdS48x\\n6crGgSU/sIugJ9U3Ph7SWEf4wjPYgFRbB8dcbK/+M7SvCJ2/NR8UZKWXxa5TpO4+\\n2ElOQBtoUlLTnACetImf5YcchA==\\n-----END PRIVATE KEY-----\\n\",\n        \"client_email\": \"apiauth@sparkidxapi.iam.gserviceaccount.com\",\n        \"client_id\": \"113743275477969379982\",\n        \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n        \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n        \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n        \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/apiauth%40sparkidxapi.iam.gserviceaccount.com\"\n    },\n    databaseURL: \"https://sparkidxapi.firebaseio.com\"\n});\n\nlet oauthData = {\n    client_id: '',\n    client_secret: '',\n    access_token: '',\n    refresh_token: '',\n    redirect_uri: '',\n    expires_at: ''\n}\nlet code\nlet client_id\nlet client_secret\nlet access_token\nlet refresh_token\nlet agentId\nlet expires_in\nlet redirect_uri\nlet results=[];\n\nlet dB = fb.database();\nfbinit.database().ref('/sparkauth/oauth').on(\"value\", function(snapshot) {\n    console.log(snapshot.val());\n    oauthData=snapshot.val()\n     code = oauthData.code;\n     client_id = oauthData.client_id;\n     client_secret = oauthData.client_secret;\n     access_token = oauthData.access_token;\n     refresh_token = oauthData.refresh_token;\n     agentId = oauthData.agentId;\n     expires_in = oauthData.expires_in;\n     redirect_uri = oauthData.redirect_uri\n    console.log(\"auth updated!\"+JSON.stringify(oauthData));\n}, function (errorObject) {\n    console.log(\"The read failed: \" + errorObject.code);\n});\nfunction getOauthData(){\n    console.log(\"getting oauthData\");\n\n    // return jf.readFileSync(file)\n}\nfunction saveOauthData(od) {\n    console.log(\"saving OauthData ->\"+od);\n\n    dB.ref('/sparkauth/oauth').update({\n        access_token: od.access_token,\n        refresh_token: od.refresh_token,\n        // code: newcode\n    })\n}\nfunction promiseToGet(ops) {\n    // return new Promise(function(resolve, reject) {\n        console.log(ops + 'promise log --- ops')\n        rp(ops)\n            .then(thejson=> {\n                return new Promise(function(resolve, reject) {\n                    setTimeout(() => resolve(thejson), 2500 );})//2.5  seconds\n                    .catch((err) => console.log(\"error: \"+\" \"+JSON.stringify(thejson), err.message));\n            })\n            .catch(errors.StatusCodeError, reason=>{\n                    console.log(reason)\n            })\n            .catch(errors.RequestError, function (reason) {\n                // reason.cause is the Error object Request would pass into a callback.\n                console.log(reason.cause)\n            })\n            .catch(e=>{\n                // reason.cause is the Error object Request would pass into a callback.\n                console.log(e)\n            })\n\n}\nfunction promDate(some){\n    return new Promise(function(resolve, reject) {\n        setTimeout(() => resolve(some), 2500 );})//2.5  seconds\n        .catch((err) => console.log(\"error: \"+\" \"+JSON.stringify(thejson), err.message));\n}\nexport default class SparkApiAuth {\n    get reqargs() {\n        return this._reqargs;\n    }\n\n    set reqargs(value) {\n\n        this._reqargs = value;\n    }\n    get tokens() {\n        return this._tokens;\n    }\n\n    set tokens(value) {\n        this._tokens = value;\n    }\n    get fBdB() {\n        return this._fBdB;\n    }\n\n    set fBdB(value) {\n        this._fBdB = value;\n    }\n    get oauthData() {\n        return getOauthData();\n    }\n\n    set oauthData(value) {\n        saveOauthData(value);\n    }\n\n    constructor() {\n        console.log(this.tokens)\n        let _fbsdb = dB\n        // dB = fBdB;\n        // let _fbsref = _fbsdb.ref(\"/sparkauth/oauth\");\n        let _args;\n        _args = {\n            _pagination: '1',\n            _page: '1',\n            _filter: \"PropertyType Eq 'A' And MlsStatus Eq 'Active'\",\n            _limit: '25',\n            _expand: 'Photos'\n        };\n\n        this._reqargs = {};\n        this._args = _args\n        this._fBdB = dB;\n        dB.ref(\"/sparkauth/oauth\").on(\"value\", function (snapshot) {\n            console.log(snapshot.val());\n            // this.tokens = jf.readFileSync(file)\n                oauthData.client_id= snapshot.val().client_id\n                oauthData.client_secret= snapshot.val().client_secret\n                oauthData.access_token= snapshot.val().access_token\n                oauthData.refresh_token= snapshot.val().refresh_token\n                oauthData.redirect_uri= snapshot.val().redirect_uri\n                oauthData.expires_at= snapshot.val().expires_at?snapshot.val().expires_at:\"0\"\n            console.log(\"The snapshot was updated!\");\n        }, function (errorObject) {\n            console.log(\"The read failed: \" + errorObject.code);\n        });\n\n    }\n\nsaveTokens(newAToken, newRToken, newExpires, newAgentId, newcode, res) {\n    // Get a key for a new Post.\nconsole.log('saving...')\n    if(newAToken) {\n        oauthData.access_token = newAToken;\n        oauthData.refresh_token = newRToken;\n        oauthData.code = newcode;\n        var d = new Date();\n        d.setSeconds(d.getSeconds() + 86400)\n        let expireson = d;\n        console.log(expireson)\n        this.fBdB.ref('/sparkauth/oauth').update({\n            access_token: newAToken,\n            refresh_token: newRToken,\n            // code: newcode\n        }).then(data=>{\n        res.send('ok')})\n\n}}\n\ncheckStatus(response) {\n    if (response.statusCode == 401) {\n        console.log('response = 401 ? '+response.statusCode)\n        // let oauthData = Object.assign({},oauthData)\n        // let fBdB = this.fBdB\n         let auth = this\n        let rt;\n        rt = function () {\n            auth.refreshAuth()\n        };\n        return rt()\n    }\n        if (response.statusCode >= 200 && response.statusCode < 300) {\n            return response\n        } else {\n            var error = new Error(response.statusText)\n            error.response = response\n            throw error\n        }\n    }\nparseJSON(response) {\n        return response.json()\n    }\n// promiseGeoFireSave(listing){\n//     return new Promise(function(resolve, reject) {\n//         setTimeout(() => resolve(listing), 2500 );})//2.5  seconds\n//         .then(listing=>{\n//             let gf = new geofb(dB.ref('/listings/id/'+listing['Id']+\"/geo\"))\n//             let listinggeo = 'geo'\n//             gf.set(listinggeo,[listing['Longitude'],listing['Latitude']]);\n//             gf.ref(dB.ref('/listings/location/geofire/'+listing['Id']))\n//             gf.set(listing['Id'],[listing['Longitude'],listing['Latitude']])\n//         })\n//         .catch((err) => console.log(\"error: \"+\" \"+JSON.stringify(listing), err.message));\n// }\nhandleReq(req,res){\n    let headers = new Headers({\n        'X-SparkApi-User-Agent': 'Idx Agent',\n        'Content-Type': 'application/json'\n    });\n    let options;\n    options = new Request({\n        url: 'https://sparkapi.com/v1/oauth2/grant',\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify({\n            client_id: oauthData.client_id,\n            client_secret: oauthData.client_secret,\n            grant_type: \"authorization_code\",\n            code: hascode ? code : oauthData.code,\n            redirect_uri: oauthData.redirect_uri\n        }),\n        json: true\n    });\n    fetch(options)\n        .then(this.checkStatus)\n        .then(this.parseJSON)\n        .then(pb=>{\n            this.saveTokens(pb.access_token, pb.refresh_token, 86400, agentId, code, res)\n            res.send('<strong>zip codes</strong><br><a href=\"/zip/07717\"><br/><strong>zip 07717</strong><br><a href=\"/zip/08736\"><strong>zip 08736</strong><br/><br/><strong>Log in</strong> with Spark</a>' +\n                '<a href=\"https://sparkplatform.com/oauth2?response_type=code&client_id='+oauthData.client_id+'&redirect_uri='+oauthData.redirect_uri+'\">Agent <strong>login</strong></a>');\n        })\n        .catch(function(err) {\n            res.send(err + 'oops');\n            console.log(err + 'uhoh');\n            console.log('request failed', err)})\n\n}\nhandleCallback(req, res) {\n    let hascode = false;\n    let agentId = '';\n    if (req.query['openid.spark.code']) {\n        code = req.query['openid.spark.code'];\n        hascode=!hascode;\n    }\n    if (req.query['openid_spark_code']) {\n        code = req.query['openid_spark_code'];\n        hascode=!hascode;\n    }\n    if (req.query['code']){\n        code = req.query['code'];\n        hascode=!hascode;\n    }\n\n    if (req.query['openid.spark.state']) {\n        agentId = req.query['openid.spark.state']\n    }\n    if(req.query['state']) {\n        agentId = req.query['state']\n    }\n    // console.log(req.query['openid.spark.code'] + ' : from callback');\n    let headers = new Headers({\n        'X-SparkApi-User-Agent': 'Idx Agent',\n        'Content-Type': 'application/json'\n    });\n    let options;\n    options = new Request({\n        url: 'https://sparkapi.com/v1/oauth2/grant',\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify({\n            client_id: oauthData.client_id,\n            client_secret: oauthData.client_secret,\n            grant_type: \"authorization_code\",\n            code: hascode ? code : oauthData.code,\n            redirect_uri: oauthData.redirect_uri\n        })\n    });\n    fetch(options)\n        .then(this.checkStatus)\n        .then(this.parseJSON)\n        .then(pb=>{\n            this.saveTokens(pb.access_token, pb.refresh_token, 86400, agentId, code, res)\n            res.send('<strong>zip codes</strong><br><a href=\"/zip/07717\"><br/><strong>zip 07717</strong><br><a href=\"/zip/08736\"><strong>zip 08736</strong><br/><br/><strong>Log in</strong> with Spark</a>' +\n                '<a href=\"https://sparkplatform.com/oauth2?response_type=code&client_id='+oauthData.client_id+'&redirect_uri='+oauthData.redirect_uri+'\">Agent <strong>login</strong></a>');\n        })\n        .catch(function(err) {\n            res.send(err + 'oops');\n            console.log(err + 'uhoh');\n            console.log('request failed', err)})\n        }\noauthHeaders(){\n    return {\n        'X-SparkApi-User-Agent': 'DevApp',\n        'Authorization': 'OAuth '+access_token,\n        'Content-Type': 'application/json'\n    };\n}\n    promiseSaveListings(listings){\n        function finishUpdate(uplst,ups,o,e,p) {\n            console.log('next - saving now')\n            e[p['idpath']] = uplst\n            e[p.zippath] = uplst\n            e[p.citypath] = uplst\n            e[p.streetpath] = uplst['Id']\n            e[p.streetnumpath] = uplst['Id']\n            //  console.log('updating!'+JSON.stringify(uplist))//\n            o.push(uplst)\n            ups = Object.assign(ups, e)\n            dB.ref('/').update(ups);\n            return new Promise(function(resolve, reject) {\n                setTimeout(() => resolve(ups),2500 );})\n        }\n        function minipromise(prom){\n            return new Promise(function(resolve, reject) {\n                setTimeout(() => resolve(prom),2500 );})\n        }\n\n        let updates = {}\n        let obj = []\n        return new Promise(function(resolve, reject) {\n            setTimeout(() => resolve(listings), 2500 );})//2.5  seconds\n            .then(listings=>{\n                listings.forEach(listing=> {\n                    let uplist = {media:[]}\n                    uplist = Object.assign(uplist, listing.StandardFields);\n                    uplist['Id'] = listing['Id'];\n                    uplist['PhotoThumb'] = listing.StandardFields.Photos[0] ? listing.StandardFields.Photos[0].UriThumb : 'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire110x75.png';\n                    uplist['media']['PhotoThumb'] = listing.StandardFields.Photos[0] ? listing.StandardFields.Photos[0].UriThumb : 'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire110x75.png';\n                    uplist['PhotoLarge'] = listing.StandardFields.Photos[0].UriLarge ? listing.StandardFields.Photos[0].UriLarge : 'unset';\n                    uplist['media']['PhotoLarge'] = listing.StandardFields.Photos[0].UriLarge ? listing.StandardFields.Photos[0].UriLarge : 'unset';\n                    uplist['Photo800'] = listing.StandardFields.Photos[0].Uri800 ? listing.StandardFields.Photos[0].Uri800 : 'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire110x75.png';\n                    uplist['media']['Photo800'] = listing.StandardFields.Photos[0].Uri800 ? listing.StandardFields.Photos[0].Uri800 : 'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire110x75.png';\n                    uplist['Photo300'] = listing.StandardFields.Photos[0].Uri300 ? listing.StandardFields.Photos[0].Uri300 : 'unset';\n                    uplist['media']['Photo300'] = listing.StandardFields.Photos[0].Uri300 ? listing.StandardFields.Photos[0].Uri300 : 'unset';\n                    uplist['Photo1024'] = listing.StandardFields.Photos[0].Uri1024 ? listing.StandardFields.Photos[0].Uri1024 : 'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire110x75.png';\n                    uplist['media']['Photo1024'] = listing.StandardFields.Photos[0].Uri1024 ? listing.StandardFields.Photos[0].Uri1024 : 'https://shire.mikeamato.org/wp-content/uploads/2016/11/shire110x75.png';\n                    uplist['PhotoId'] = listing.StandardFields.Photos[0].Id ? listing.StandardFields.Photos[0].Id : '0';\n                    uplist['PhotoCaption'] = listing.StandardFields.Photos[0].Caption ? listing.StandardFields.Photos[0].Caption : 'Photo Caption';\n                    let idpath = \"/listings/id/\" + listing['Id']\n                    let entry = {}\n                    let entrygeo = {}\n                    let citypath = \"/listings/location/city/\" + uplist['City'] + \"/\" + listing['Id']\n                    let zippath = \"/listings/location/zip/\" + uplist['PostalCode'] + \"/\" + listing['Id'];\n                    let streetpath = \"/listings/location/street/name/\" + encode(uplist['StreetName']) + \"/\" + listing['Id']\n                    let streetnumpath = \"/listings/location/street/number/\" + encode(uplist['StreetNumber']) + \"/\" + listing['Id']\n                    let paths = {idpath:idpath,citypath:citypath,zippath:zippath,streetpath:streetpath,streetnumpath:streetnumpath}\n\n                    // size({url: uplist['PhotoLarge']},function (err, dimensions, length) {\n                    //     console.log(JSON.stringify(dimensions))\n                    //     uplist['PhotoLargeH'] = dimensions.height;\n                    //     uplist['PhotoLargeW'] = dimensions.width;\n                    //     finishUpdate(uplist,updates,obj,entry,paths);\n                    // })\n                    if (uplist['Photos'][0]){\n                        let saving = uplist['Photos'].forEach(key=>{\n                            Object.keys(uplist['Photos'][0]).forEach(subkey=>{\n                                size({url: uplist['Photos'][0][subkey]},function (err, dimensions, length) {\n                                    console.log(JSON.stringify(dimensions))\n                                    uplist['media'][key][subkey]['size'] = dimensions;\n                                    uplist['media'][key][subkey]['width'] = dimensions.width;\n                                })})})}else\n                    {\n                        let saving = {};\n                    }\n                    minipromise(saving)\n                        .then(enddata=>{\n                            finishUpdate(uplist,updates,obj,entry,paths);\n                        })\n                        .catch((err) => console.log(\"error: \"+JSON.stringify(err)));\n                })\n\n                console.log('# of listings: '+listings.length);\n            })\n            .then(end=>{\n                return end;\n            })\n            .catch((err) => console.log(\"error: \"+\" \"+JSON.stringify(listings), err.message));\n    }\n    static removeall(){\n        let remit = dB.ref('/listings').remove().then(function () {\n            return \"done clearing\";\n        })}\n    getPage(ops){\n        console.log('getting with ops:'+JSON.stringify(ops))\n        return new Promise(function(resolve, reject) {\n            setTimeout(() => resolve(ops), 250000 );})//250  seconds\n            .catch((err) => console.log(\"error: \"+JSON.stringify(ops), err));\n    }\n    getListings(req,res, filter) {\n        let combo=[];\n        let obj = []\n        let addr = req.params.addr;\n        let pageops=[];\n        let setargs = {\n            _filter: filter\n        };\n        let opsurl =  this.makeUrl(setargs, null, 'A', 'https://sparkapi.com/v1/listings?', 'Active');\n        let authops = {\n            headers: this.oauthHeaders(),\n            uri: opsurl+'&_pagination=count&_page=1',\n            json: true\n        };\n        let od = Object.assign({}, oauthData)\n        let fdB = this.fBdB\n        let tauth = new SparkApiAuth(fdB)\n        var rt;\n        rt = function () {\n            tauth.refreshAuth(od, tauth)\n        };\n        console.log('about to request...'+JSON.stringify(authops))\n        rp(authops)\n            .then(pb => {\n                // results.concat(pb['D']['Results']);\n                console.log('pagei:'+JSON.stringify(pb['D']['Pagination']))\n\n                let pages = pb['D']['Pagination']['TotalPages'];\n                let currentpage = pb['D']['Pagination']['CurrentPage'];\n                let pagearr=[]\n                if (currentpage < pages){\n\n                    for (let page = 1; page < pages; page++) {\n                        let pageReq = {};\n                        let newops = {headers:this.oauthHeaders(),uri:opsurl+'&_pagination=1&_page='+page,json:true};\n                        pagearr.push(newops)\n\n                    }}else\n                {\n                    let newops = {headers:this.oauthHeaders(),uri:opsurl+'&_pagination=1&_page=1',json:true};\n                    pagearr.push(newops)\n                }\n                let promisedPages=pagearr.map(ops=>{\n                    return this.getPage(rp(ops).then(pb=>{\n                        console.log('adding to combo'+pb['D']['Pagination']['CurrentPage'])\n                        this.promiseSaveListings(pb['D']['Results'])                        }));\n                })\n                Promise.all(promisedPages)\n                    .then(endres=>{\n                        res.set({'Access-Control-Allow-Origin':'*'});\n                        console.log('saving combo with '+combo.length)\n\n                        console.log('length:'+combo.length);\n                        res?res.send(combo):console.log('no res to send ....Saved')\n                    });\n            })\n            .catch(errors.StatusCodeError, function (reason) {\n                // The server responded with a status codes other than 2xx.\n                // Check\n                if (reason.statusCode == 401) {\n                    console.log(reason)\n                    rt()\n                }\n            })\n            // .catch(this.checkStatus)\n            .catch(errors.RequestError, function (reason) {\n                // reason.cause is the Error object Request would pass into a callback.\n                console.log(reason.cause)\n            })\n            .catch(e=>{\n                // reason.cause is the Error object Request would pass into a callback.\n                console.log('e:'+e)\n            })\n    }\n\nmakeUrl(args,zipcode=null,proptype=null,base='https://sparkapi.com/v1/listings?',status=null){\n    let argfilter = args['_filter']?args['_filter']:''\n    let select = 'StreetNumber,StreetName,PostalCode,ListPrice,City,BedsTotal,BathsTotal,PublicRemarks,PropertyType,MlsStatus,Photos,Latitude,ListingId,Longitude,PostalCode,PropertySubType,YearBuilt'\n    let andT = args['_filter']?' And ':''\n    let zipfilter = zipcode?argfilter+andT+`\" PostalCode Eq '${zipcode}'`:argfilter\n    let andZ = zipcode?andT:''\n    let proptypefilter = proptype?zipfilter+andZ+\" PropertyType Eq '\"+proptype+\"'\":zipfilter\n    let andP = zipcode?andT:''\n    let statusFilter = status?proptypefilter+andP+\" MlsStatus Eq '\"+status+\"'\":proptypefilter\n    // let limit = args['_select']?25:25\n    let formatargs = {\n        // _pagination:'1',\n        _orderby:   'City',\n        _filter:    args['_filter'],\n        _limit:     50,\n        // _page:      1,\n        _select:    'Photos.UriThumb,Photos.UriLarge,Photos.Uri300,Photos.Caption,PrimaryPhoto,StreetNumber,StreetName,StreetSuffix,PostalCode,ListPrice,City,BedsTotal,BathsTotal,PublicRemarks,PropertyType,MlsStatus,Latitude,ListingId,Longitude,PostalCode,PropertySubType,YearBuilt',\n    }\n        // formatargs['_page'] = args['_page']?args['_page']:1\n        // formatargs['_select'] = select\n        args = Object.assign({},formatargs)\n        let arr = Object.keys(args).map(key=>{\n        let argEntry = formatargs[key]?formatargs[key]:args[key]\n        let entry = key+\"=\"+argEntry\n        return entry\n    })\n    return base+arr.join('&')\n}\npromiseTo(doThis) {\n    console.log('promised to do something ...')\n        return new Promise(function(resolve, reject) {\n            setTimeout(() => resolve(doThis), 1*doThis);})\n    }\ncountPromise(at, args,zip=null,proptype=null){\n    console.log('promise to get count, then return promise with count ')\n    return this.promiseTo(this.createFetchPromise(at,args,zip,proptype))\n\n}\nrefreshAuth(oauthData=oauthData,auth=null) {\n    let thisauth = Object.assign(auth,this)\n    console.log('refreshing with :'+oauthData)\n        var headers = {\n            'X-SparkApi-User-Agent': 'IDX Agent',\n            'Content-Type': 'application/json'\n        };\n        rp({\n            url:'https://sparkapi.com/v1/oauth2/grant',\n            method:'POST',\n            headers: headers,\n            body: {\n                grant_type:     \"refresh_token\",\n                client_id:      oauthData.client_id,\n                client_secret:  oauthData.client_secret,\n                refresh_token:  oauthData.refresh_token,\n                redirect_uri:   oauthData.redirect_uri\n            },\n            json: true\n        }, function (err, res, body) {\n            thisauth.saveTokens(body.access_token, body.refresh_token, 86400, body.state, '', res);\n        })\n            .catch(errors.StatusCodeError, function (reason) {\n                    console.log('Reason:'+reason+'          #####################   Status Code : '+reason.statusCode)})\n            .catch(errors.RequestError, function (reason) {console.log(reason)})\n\n}\n\ncountPagesAndRequestJson(at,fbd, args=null,zip=null,proptype=null){\n    let fetcharr = []\n    var setargs = {\n        _pagination:'1',\n        _page:      '',\n        _filter:    \"PostalCode Eq '\"+ zip +\"'\",\n        _limit:     args['_limit']?args['_limit']:'25',\n        _expand:    'Photos'\n\n    }\n    let countArgs = Object.assign({},setargs)\n    countArgs._pagination = 'count'\n    let countOps = this.setupOptions(\n        {\n            at: at,\n            args: countArgs,\n            listId: null,\n            page: zip,\n            zip: proptype\n        }\n        )\n    countOps.url = \"https://sparkapi.com/v1/listings\"\n\n\n    let oauthData = Object.assign({},oauthData)\n    let fBdB = this.fBdB\n    let auth = this\n    let rt;\n    rt = function () {\n        auth.refreshAuth(oauthData, auth)\n    };\n        rp(countOps)\n            .then(response=> {\n                let pages = response.D.Pagination.TotalPages\n                for (var page = 1; page <= pages; page++) {\n                    var pageReq = {};\n                    var newarg = Object.assign({}, setargs)\n                    newarg._page = page;\n                    newarg._pagination = 1\n                    let ops = this.setupOptions({\n                        at: at,\n                        args: newarg,\n                        listId: null,\n                        page: page,\n                        zip: zip,\n                        proptype: proptype,\n                        status: null\n                    })\n                    ops.url = 'https://sparkapi.com/v1/listings'\n                    ops.qs['_select'] = 'ListingId'\n\n                    fetcharr.push(ops);\n\n                }\n                let detailsArr = []\n                var promises = fetcharr.map(promiseToGet);\n                Promise.all(promises)\n                    .then(data => {\n\n                        console.log('resolved, now doing details')\n                        data.forEach(\n                        )\n                    })\n                    .catch(errors.StatusCodeError, function (reason) {\n                        // The server responded with a status codes other than 2xx.\n                        // Check\n                        if (reason.statusCode == 401) {\n                            console.log(reason)\n                            rt()\n                        }\n                    })\n                    .catch(errors.RequestError, function (reason) {\n                        // The request failed due to technical reasons.\n                        // reason.cause is the Error object Request would pass into a callback.\n                    })\n                    .catch(e=>{\n                        console.log(e)\n                    })\n            })\n    }\n}\n"]}